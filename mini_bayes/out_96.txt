**************************** CHAPTER 2 *********************************

MTB > exec 'craps'
MTB > ##################################################################
MTB > #  MACRO 'CRAPS'                                                 #
MTB > # -------------------------------------------------------------- #
MTB > #  PLAYS GAME OF CRAPS                                           #
MTB > ##################################################################
 
HOW MANY GAMES DO YOU WANT TO PLAY?
DATA> 2

NOTE:   
  Type 'y' and return to play:

y

GAME    
   1 

ROLLS   
   6    3    8    7 

RESULT  
  You lose!   

NOTE:   
  Type 'y' and return to play:

y

GAME    
   2 

ROLLS   
   8    6    4    9    9    7 

RESULT  
  You lose!   

Type 'y' and return for some summary statistics:
y
  
 ROWS: 1ST_ROLL     COLUMNS: WIN?
 
           0      ALL
  
  6        1        1
  8        1        1
 ALL       2        2
 
  CELL CONTENTS --
                  COUNT

  
ROWS: N_ROLLS     COLUMNS: WIN?
 
           0      ALL
  
  4        1        1
  6        1        1
 ALL       2        2
 
  CELL CONTENTS --
                  COUNT

MTB > exec 'yahtzee'
MTB > ##################################################################
MTB > #  MACRO 'YAHTZEE'                                               #
MTB > # -------------------------------------------------------------- #
MTB > #  PLAYS GAME OF YAHTZEE                                         #
MTB > #  PLAYER CAN DECIDE WHICH DICE TO DISCARD                       #
MTB > ##################################################################
 
Type 'y' and return to start rolling dice:
y
#########################
#        ROLL 1         #
#########################

rolls   
   4    6    5    3    4 

result  
  small straight

ENTER (USING SEQUENCES OF 0'S AND 1'S) WHICH DICE TO KEEP:
DATA> 1 0 0 0 1
#########################
#        ROLL 2         #
#########################

rolls   
   4    4    1    4    4 

result  
  4 of a kind   

ENTER (USING SEQUENCES OF 0'S AND 1'S) WHICH DICE TO KEEP:
DATA> 1 1 0 1 1
#########################
#        ROLL 3         #
#########################

rolls   
   4    4    5    4    4 

result  
  4 of a kind   

MTB > exec 'yahtz_au'
MTB > ##################################################################
MTB > #  MACRO 'YAHTZ_AU'                                              #
MTB > # -------------------------------------------------------------- #
MTB > #  PLAYS GAME OF YAHTZEE                                         #
MTB > #  COMPUTER DECIDES ON WHICH DICE TO DISCARD                     #
MTB > ##################################################################
 
Type 'y' and return to start rolling dice:
y
 
#################################
#          1ST ROLL             #
#################################

rolls   
   3    5    1    2    4 

result  
  large straight

keep    
   1    1    1    1    1 

TYPE 'y' AND RETURN FOR NEXT ROLL:
y
 
#################################
#          2ND ROLL             #
#################################

rolls   
   3    5    1    2    4 

result  
  large straight

keep    
   1    1    1    1    1 

TYPE 'y' AND RETURN FOR NEXT ROLL:
y
 
#################################
#          3RD ROLL             #
#################################

rolls   
   3    5    1    2    4 

result  
  large straight

MTB > exec 'yahtz_re' 9

out     
   2    2    5 

out     
   3    3    3 

out     
   5    0    0 

out     
   2    3    3 

out     
   4    4    8 

out     
   3    3    3 

out     
   2    4    5 

out     
   2    3    3 

out     
   2    3    3 

MTB > exec 'bball'
MTB >  
MTB > ##################################################################
MTB > #  MACRO 'BBALL'                                                 #
MTB > # -------------------------------------------------------------- #
MTB > #  SIMULATES A SEASON OF BASEBALL                                #
MTB > ##################################################################
 
INPUT TEAM STRENGTHS:
DATA> -1 -.5 0 .5 1
DATA> end

 ROWS: winner     COLUMNS: loser
 
           1        2        3        4        5      ALL
  
  1        0        4        3        3        0       10
  2        4        0        4        4        1       13
  3        5        4        0        5        2       16
  4        5        4        3        0        4       16
  5        8        7        6        4        0       25
 ALL      22       19       16       16        7       80
 
  CELL CONTENTS --
                  COUNT

winner  Count
       1    10 
       2    13 
       3    16 
       4    16 
       5    25 
      N=    80 

MTB > exec 'bball_re' 9

  winner  Count
       1     6 
       2    11 
       3    12 
       4    24 
       5    27 
      N=    80 

  winner  Count
       1     6 
       2    11 
       3    13 
       4    26 
       5    24 
      N=    80 

  winner  Count
       1    11 
       2     9 
       3    13 
       4    20 
       5    27 
      N=    80 

  winner  Count
       1    11 
       2    12 
       3    15 
       4    18 
       5    24 
      N=    80 

  winner  Count
       1     8 
       2     6 
       3    15 
       4    22 
       5    29 
      N=    80 

  winner  Count
       1    12 
       2    10 
       3    15 
       4    20 
       5    23 
      N=    80 

  winner  Count
       1     8 
       2    13 
       3    16 
       4    16 
       5    27 
      N=    80 

  winner  Count
       1     7 
       2    16 
       3    13 
       4    25 
       5    19 
      N=    80 

  winner  Count
       1    11 
       2    15 
       3    11 
       4    16 
       5    27 
      N=    80 

MTB > prin 'nwins_1'-'nwins_5'

 Row  nwins_1  nwins_2  nwins_3  nwins_4  nwins_5

   1       10       13       16       16       25
   2        6       11       12       24       27
   3        6       11       13       26       24
   4       11        9       13       20       27
   5       11       12       15       18       24
   6        8        6       15       22       29
   7       12       10       15       20       23
   8        8       13       16       16       27
   9        7       16       13       25       19
  10       11       15       11       16       27

MTB > prin 'place_1'-'place_5'

 Row  place_1  place_2  place_3  place_4  place_5

   1      5.0        4      2.5      2.5        1
   2      5.0        4      3.0      2.0        1
   3      5.0        4      3.0      1.0        2
   4      4.0        5      3.0      2.0        1
   5      5.0        4      3.0      2.0        1
   6      4.0        5      3.0      2.0        1
   7      4.0        5      3.0      2.0        1
   8      5.0        4      2.5      2.5        1
   9      5.0        3      4.0      1.0        2
  10      4.5        3      4.5      2.0        1

**************************** CHAPTER 3 *********************************
MTB > 
MTB > exec 'bayes_se'
MTB > ##################################################################
MTB > #  MACRO 'BAYES_SE'                                              #
MTB > # -------------------------------------------------------------- #
MTB > #  BAYES RULE FOR A FINITE NUMBER OF MODELS                      #
MTB > #  AND FINITE NUMBER OF OUTCOMES.                                #
MTB > #                                                                #
MTB > #  THIS PROGRAM SETS UP MODELS, PRIOR, AND LIKELIHOODS.          #
MTB > #                                                                #
MTB > #  THE MACRO 'BAYES' IMPLEMENTS BAYES RULE FOR A SEQUENCE        #
MTB > #  OF INDEPENDENT OUTCOMES.                                      #
MTB > ##################################################################
 
INPUT NUMBER OF MODELS:
DATA> 2
 
INPUT NAMES OF MODELS (ONE NAME ON EACH LINE):
DATA> have disease
DATA> don't have disease
 
INPUT PRIOR PROBABILITIES OF MODELS:
DATA> .001 .999
 
INPUT THE NUMBER OF POSSIBLE OUTCOMES:
DATA> 2
 
INPUT THE NAME OF EACH OBSERVATION:
 (ONE OBSERVATION ON A LINE)
DATA> +
DATA> -
 
INPUT LIKELIHOODS OF EACH MODEL:

MODEL   
   1 

DATA> .95 .05
      1 rows read.

MODEL   
   2 

DATA> .05 .95
      1 rows read.
 
OBSERVATION NAMES:

 Row            OBS  OBS_NAME

   1   OUT_1            +    
   2   OUT_2            -    

 
TABLE OF PROBABILITIES OF MODELS AND OUTCOMES:

 Row  MODEL           NAME   PRIOR  OUT_1  OUT_2

   1      1   have disease   0.001   0.95   0.05
   2      2   don't have d   0.999   0.05   0.95

MTB > exec 'bayes'
MTB > ##################################################################
MTB > #  MACRO 'BAYES'                                                 #
MTB > # -------------------------------------------------------------- #
MTB > #  IMPLEMENTS BAYES RULE FOR A SEQUENCE OF INDEPENDENT OUTCOMES. #
MTB > #  THE PROGRAM 'BAYES_SETUP' MUST BE RUN FIRST TO                #
MTB > #  SET UP MODELS, PRIOR, AND LIKELIHOODS.                        #
MTB > ##################################################################
 
INPUT NUMBER OF OBSERVATIONS:
DATA> 1
 
INPUT OBSERVATIONS:
 (ONE OBSERVATION NAME ON A LINE:)
DATA> +

OUTCOME 
  +    

 Row  MODEL           NAME   PRIOR   LIKE   PRODUCT       POST

   1      1   have disease   0.001   0.95   0.00095   0.018664
   2      2   don't have d   0.999   0.05   0.04995   0.981336

SUMMARY OF PRIOR AND POSTERIOR MODEL PROBABILITIES:

 Row  OBS_NO  OUTCOMES     PROB_M1    PROB_M2

   1       0             0.0010000   0.999000
   2       1     +       0.0186640   0.981336

**************************** CHAPTER 4 *********************************
MTB > 
MTB > name c1 'p' c2 'prior'
MTB > set c1
DATA> .2 .25 .3 .35
DATA> end
MTB > set 'prior'
DATA> .25 .25 .25 .25
DATA> end
MTB > exec 'p_disc'
MTB > ##################################################################
MTB > #  MACRO 'P_DISC'                                                #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT A BINOMIAL PROPORTION P USING                 #
MTB > #  A FINITE COLLECTION OF P MODELS.                              #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  VALUES OF P IN COLUMN 'P' AND PRIOR PROBABILITIES     #
MTB > #          IN COLUMN 'PRIOR'                                     #
MTB > #  OUTPUT: POSTERIOR PROBABILITIES IN COLUMN 'POST'              #
MTB > ##################################################################
 
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES:
DATA> 5 15

 Row      p  prior  P_x_PRIO      LIKE  PRODUCT       POST   P_x_POST

   1   0.20   0.25    0.0500    862742   215686   0.255595   0.051119
   2   0.25   0.25    0.0625   1000000   250000   0.296259   0.074065
   3   0.30   0.25    0.0750    884011   221003   0.261897   0.078569
   4   0.35   0.25    0.0875    628668   157167   0.186249   0.065187
   5                  0.2750                                 0.268940

         -
     0.30+                    *
         -                    *
 PROB    -    *               2                *
         -    2               *                2
         -    *               *                *
     0.20+    2               2                2
         -    *               *                2                2
         -    2               *                *                2
         -    *               2                2                3
         -    2               *                *                2
     0.10+    *               *                2                2
         -    2               2                *                2
         -    2               *                2                2
         -    *               *                *                2
         -    2               2                2                2
     0.00+    *               *                *                2
           ------+---------+---------+---------+---------+---------+MODEL   
             0.210     0.240     0.270     0.300     0.330     0.360

MTB > set c1
DATA> .2:.5/.01
DATA> end
MTB > let c2=1+0*c1
MTB > exec 'p_disc'
MTB > ##################################################################
MTB > #  MACRO 'P_DISC'                                                #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT A BINOMIAL PROPORTION P USING                 #
MTB > #  A FINITE COLLECTION OF P MODELS.                              #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  VALUES OF P IN COLUMN 'P' AND PRIOR PROBABILITIES     #
MTB > #          IN COLUMN 'PRIOR'                                     #
MTB > #  OUTPUT: POSTERIOR PROBABILITIES IN COLUMN 'POST'              #
MTB > ##################################################################
 
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES:
DATA> 132 236

 Row      p       prior   P_x_PRIO      LIKE   PRODUCT       POST   P_x_POST

   1   0.20   0.0322581   0.006452         0       0.0   0.000000   0.000000
   2   0.21   0.0322581   0.006774         0       0.0   0.000000   0.000000
   3   0.22   0.0322581   0.007097         0       0.0   0.000000   0.000000
   4   0.23   0.0322581   0.007419         0       0.0   0.000000   0.000000
   5   0.24   0.0322581   0.007742         2       0.1   0.000000   0.000000
   6   0.25   0.0322581   0.008065        22       0.7   0.000004   0.000001
   7   0.26   0.0322581   0.008387       168       5.4   0.000027   0.000007
   8   0.27   0.0322581   0.008710       986      31.8   0.000157   0.000042
   9   0.28   0.0322581   0.009032      4623     149.1   0.000738   0.000207
  10   0.29   0.0322581   0.009355     17503     564.6   0.002795   0.000810
  11   0.30   0.0322581   0.009677     54043    1743.3   0.008628   0.002589
  12   0.31   0.0322581   0.010000    137316    4429.5   0.021924   0.006796
  13   0.32   0.0322581   0.010323    289396    9335.4   0.046205   0.014786
  14   0.33   0.0322581   0.010645    509435   16433.4   0.081337   0.026841
  15   0.34   0.0322581   0.010968    753677   24312.2   0.120333   0.040913
  16   0.35   0.0322581   0.011290    942155   30392.1   0.150426   0.052649
  17   0.36   0.0322581   0.011613   1000000   32258.1   0.159661   0.057478
  18   0.37   0.0322581   0.011935    904873   29189.5   0.144473   0.053455
  19   0.38   0.0322581   0.012258    700599   22600.0   0.111858   0.042506
  20   0.39   0.0322581   0.012581    465547   15017.7   0.074330   0.028989
  21   0.40   0.0322581   0.012903    266206    8587.3   0.042503   0.017001
  22   0.41   0.0322581   0.013226    131264    4234.3   0.020958   0.008593
  23   0.42   0.0322581   0.013548     55913    1803.6   0.008927   0.003749
  24   0.43   0.0322581   0.013871     20601     664.6   0.003289   0.001414
  25   0.44   0.0322581   0.014194      6572     212.0   0.001049   0.000462
  26   0.45   0.0322581   0.014516      1817      58.6   0.000290   0.000131
  27   0.46   0.0322581   0.014839       435      14.0   0.000069   0.000032
  28   0.47   0.0322581   0.015161        90       2.9   0.000014   0.000007
  29   0.48   0.0322581   0.015484        16       0.5   0.000003   0.000001
  30   0.49   0.0322581   0.015806         3       0.1   0.000000   0.000000
  31   0.50   0.0322581   0.016129         0       0.0   0.000000   0.000000
  32                      0.350000                                  0.359460

         -                               *
    0.150+                             * *
         -                             2 2 2
 PROB    -                             * * *
         -                            ** * 2
         -                            22 * *2
    0.100+                            2* 2 *2
         -                            ** * 2*
         -                          2 22 * *2
         -                          3 2* * 22 3
         -                          2 ** 2 *2 3
    0.050+                        * 2 22 * ** 2
         -                        4 3 2* * 22 3 4
         -                        5 2 ** * *2 3 5
         -                       74 3 22 2 *2 2 46
         -                     9 94 2 2* * 22 3 5+ 9
    0.000+    + + ++ + ++ + ++ + 53 2 ** * ** 2 35 + ++ + ++ + ++
           +---------+---------+---------+---------+---------+------MODEL   
       0.180     0.240     0.300     0.360     0.420     0.480

MTB > exec 'disc_sum'

INPUT NUMBER OF COLUMN WHICH CONTAINS VALUES OF VARIABLE:
DATA> 1
 
INPUT NUMBER OF COLUMN WHICH CONTAINS PROBABILITIES:
DATA> 51
 
TYPE 'y' TO SEE A PLOT OF THE PROBABILITIES:
n
 
TYPE 'y' TO GET SUMMARIES OF THE DISTRIBUTION:
y

 Row   MODE       MEAN         STD

   1   0.36   0.359460   0.0249122

TYPE 'y' TO COMPUTE CUMULATIVE PROBABILITIES:
--------------------------------------------------------------------
  Input values of variable of interest.  The output is the column of
  values and the column of cumulative probabilities PROB_LE.
--------------------------------------------------------------------
y
DATA> .2 .39
DATA> end

 Row  VALUE    PROB_LE

   1   0.20   0.000000
   2   0.39   0.922897

 
TYPE 'y' TO COMPUTE PROBABILITY INTERVALS:
--------------------------------------------------------------------
  Input list of probabilities.  For each probability p, the
  set of values of the variable for which the probability content
  of the set exceeds p is given.
--------------------------------------------------------------------
y
DATA> .5 .9
DATA> end

PROB_SET
  0.574893 

SET     
  0.34   0.35   0.36   0.37 

--------------------------------------------------------------------------

PROB_SET
  0.931126 

SET     
  0.32   0.33   0.34   0.35   0.36   0.37   0.38   0.39   0.40 

--------------------------------------------------------------------------
MTB > set 'p'
DATA> .2 .25 .3 .35
DATA> end
MTB > set 'prior'
DATA> .25 .25 .25 .25
DATA> end
MTB > exec 'p_disc_p'
MTB > ##################################################################
MTB > #  MACRO 'P_DISC_P'                                              #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  PREDICTIVE INFERENCE FOR BINOMIAL SAMPLING                    #
MTB > #  AND FINITE COLLECTION OF P MODELS.                            #
MTB > # -------------------------------------------------------------- #
MTB > #  INPUT:  MODELS IN 'P', PROBABILITIES IN 'PRIOR' OR 'POST'     #
MTB > #  OUTPUT: NUMBER OF SUCCESSES IN COLUMN 'SUCC' AND              #
MTB > #          PREDICTIVE PROBABILITIES IN COLUMN 'PRED'             #
MTB > ##################################################################
 
INPUT 1 IF PROBABILITIES ARE IN 'PRIOR' OR
      2 IF PROBABILITIES ARE IN 'POST':
DATA> 1

INPUT NUMBER OF TRIALS:
DATA> 20
 
INPUT RANGE (LOW AND HIGH VALUES) FOR NUMBER OF SUCCESSES:
DATA> 0 20

 PREDICTIVE DISTRIBUTION OF NUMBER OF SUCCESSES:

 Row   SUCC       PRED

   1      0   0.003920
   2      1   0.021895
   3      2   0.060422
   4      3   0.110780
   5      4   0.153032
   6      5   0.170739
   7      6   0.160145
   8      7   0.128905
   9      8   0.089699
  10      9   0.053915
  11     10   0.027846
  12     11   0.012266
  13     12   0.004565
  14     13   0.001420
  15     14   0.000364
  16     15   0.000075
  17     16   0.000012
  18     17   0.000002
  19     18   0.000000
  20     19   0.000000
  21     20   0.000000

         -
    0.180+
         -             2
 PROB    -           * *  2
         -           * *  *
         -           2 2  2  *
    0.120+           2 *  *  2
         -         2 * 2  2  2
         -         2 2 *  *  2
         -         2 * *  2  * 3
         -         3 2 2  *  2 3
    0.060+      3  2 * *  2  2 2
         -      4  2 2 2  *  2 3  5
         -      4  2 2 *  2  2 3  4
         -   4  4  2 * *  *  2 2  5 8
         -   +  4  2 2 2  2  2 3  4 8  +
    0.000+ + 6  2  2 * *  *  * 2  3 5  + +  + +  + +  + +  + +
           +---------+---------+---------+---------+---------+------S       
         0.0       4.0       8.0      12.0      16.0      20.0

MTB > exec 'beta_sel'

What is the probability of a success on the first trial?
 
DATA> .3
 
If the first trial is a success, what is the conditional probability
of a success on the second trial?
(This should be larger than the first number you gave.)
 
DATA> .32
 
The matching values of the beta parameters a and b corresponding
to your predictive probabilities are given by:

 Row        a      b

   1   10.200   23.8

MTB > exec 'p_beta'
MTB > ##################################################################
MTB > #  MACRO 'P_BETA'                                                #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  FOR A BETA(A,B) DISTRIBUTION, GRAPHS DENSITY CURVE,           #
MTB > #  AND COMPUTES CUMULATIVE PROBABILITIES AND PERCENTILES.        #
MTB > ##################################################################

INPUT VALUES OF BETA PARAMETERS A AND B:
DATA> 10.2 23.8
 
TYPE 'y' TO SEE A PLOT OF THE BETA DENSITY:
y

         -               2
      4.8+                 *
         -              *   *
 density -
         -             *     *
         -
      3.2+                    *
         -           *
         -                    *
         -          *
         -                      *
      1.6+
         -          *            *
         -                        *
         -         *               *
         -       *                  **
      0.0+ ******                    * *2 ********************
           +---------+---------+---------+---------+---------+------p       
        0.00      0.20      0.40      0.60      0.80      1.00

 
TYPE 'y' TO COMPUTE CUMULATIVE PROBABILITIES:
----------------------------------------------------------------
  Input values of P of interest.  The output is the column of
  values P and the column of cumulative probabilities PROB_LT.
----------------------------------------------------------------
y
DATA> .1 .2 .3 .4 .5
DATA> end

 Row      p    PROB_LT

   1    0.1   0.000793
   2    0.2   0.092903
   3    0.3   0.519992
   4    0.4   0.894790
   5    0.5   0.991727

 
TYPE 'y' TO COMPUTE PERCENTILES:
----------------------------------------------------------------
  Input probabilities for which you wish to compute percentiles.
  The output is the probabilities in the column PROB and the
  corresponding percentiles in the column PERCNTLE.
----------------------------------------------------------------
y
DATA> .05 .25 .5 .75 .95
DATA> end

 Row   PROB   PERCNTLE

   1   0.05   0.179486
   2   0.25   0.244887
   3   0.50   0.296039
   4   0.75   0.350879
   5   0.95   0.434082


MTB > erase c1-c100
MTB > exec 'p_beta_p'
MTB > ##################################################################
MTB > #  MACRO 'P_BETA_P'                                              #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  PREDICTIVE INFERENCE FOR BINOMIAL SAMPLING                    #
MTB > #  AND A BETA PRIOR FOR P                                        #
MTB > # -------------------------------------------------------------- #
MTB > #  OUTPUT: NUMBER OF SUCCESSES IN COLUMN 'SUCC' AND              #
MTB > #          PREDICTIVE PROBABILITIES IN COLUMN 'PRED'             #
MTB > ##################################################################
 
INPUT VALUES OF BETA PARAMETERS A AND B:
DATA> 20.4 47.6
 
INPUT NUMBER OF TRIALS:
DATA> 20 
 
INPUT RANGE (LOW AND HIGH VALUES) FOR NUMBER OF SUCCESSES:
DATA> 0 20

PREDICTIVE DISTRIBUTION OF NUMBER OF SUCCESSES:

 Row   SUCC       PRED

   1      0   0.002119
   2      1   0.012982
   3      2   0.040232
   4      3   0.083703
   5      4   0.130884
   6      5   0.163249
   7      6   0.168285
   8      7   0.146624
   9      8   0.109537
  10      9   0.070782
  11     10   0.039741
  12     11   0.019405
  13     12   0.008219
  14     13   0.003001
  15     14   0.000935
  16     15   0.000245
  17     16   0.000052
  18     17   0.000009
  19     18   0.000001
  20     19   0.000000
  21     20   0.000000

         -
    0.180+
         -             *  *
 PROB    -             *  2
         -             2  *  2
         -           * *  2  *
    0.120+           2 2  *  2
         -           2 *  *  2 2
         -           2 *  2  * 2
         -         2 2 2  *  2 2
         -         3 * *  2  * 2  2
    0.060+         3 2 2  *  2 3  3
         -         2 2 *  2  2 2  4
         -      6  3 2 2  *  * 2  3 5
         -      6  3 2 *  *  2 2  3 6  2
         -   +  6  3 2 2  2  2 2  4 6  + 6
    0.000+ + +  3  2 * *  *  * 2  2 4  7 +  + +  + +  + +  + +
           +---------+---------+---------+---------+---------+------S       
         0.0       4.0       8.0      12.0      16.0      20.0

MTB > exec 'p_beta_t'
MTB > ##################################################################
MTB > #  MACRO 'P_BETA_T'                                              #
MTB > # -------------------------------------------------------------- #
MTB > #  TESTS THE HYPOTHESIS THAT P = P0 USING A BETA PRIOR           #
MTB > ##################################################################

ENTER THE NULL HYPOTHESIS PROPORTION P0:
DATA> .5
 
ENTER THE PRIOR PROBABILITY OF P0:
DATA> .5
 
FOR THE ALTERNATIVE HYPOTHESIS THAT P = P0,
ENTER THE NUMBERS A AND B OF THE BETA(A, B) DISTRIBUTION:
DATA> 10 10
 
ENTER THE OBSERVED NUMBER OF SUCCESSES AND FAILURES:
DATA> 22 28
 
The Bayes factor in favor of the null hypothesis is:

BF_HK   
  1.45372 

The Bayes factor against the null hypothesis is:

BF_KH   
  0.68789 

The posterior probability of the null hypothesis is:

prob_H  
  0.592456 

DATA> 0 

MTB > exec 'p_hist_p'
MTB > ##################################################################
MTB > #  MACRO 'P_HIST_P'                                              #
MTB > # -------------------------------------------------------------- #
MTB > #  LEARNING ABOUT A BINOMIAL PROPORTION P                        #
MTB > #  USING A HISTOGRAM PRIOR.                                      #
MTB > ##################################################################
 
INPUT INTERVAL MIDPOINTS:
DATA> .225 .275 .325 .375
DATA> end
 
INPUT PRIOR PROBABILITIES OF INTERVALS:
DATA> .4 .4 .15 .05
 
INPUT NUMBER OF SIMULATED VALUES:
DATA> 1000
 
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES:
DATA> 4 36

The prior and posterior probabilities of the intervals:

 Row    MIDS     LO     HI  PRIOR       POST

   1   0.225   0.20   0.25   0.40   0.821976
   2   0.275   0.25   0.30   0.40   0.165562
   3   0.325   0.30   0.35   0.15   0.012053
   4   0.375   0.35   0.40   0.05   0.000408


**************************** CHAPTER 5 *********************************

MTB > exec 'pp_disc'
MTB > ##################################################################
MTB > #  MACRO 'PP_DISC'                                               #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT 2 BINOMIAL PROPORTIONS                        #
MTB > #  USING A FINITE COLLECTION OF P1,P2 MODELS - UNIFORM PRIOR     #
MTB > # -------------------------------------------------------------- #
MTB > #  OUTPUT:  COLUMNS 'P1', 'P2', 'PRIOR', 'POST', 'DIFF', 'P_DIFF'#
MTB > ##################################################################
 
 FOR EACH P DISTRIBUTION:
 ------------------------
 INPUT LO AND HI VALUES:
DATA> 0 1
 
 INPUT NUMBER OF MODELS:
DATA> 11
 
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES IN FIRST SAMPLE:
DATA> 2 13
 
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES IN SECOND SAMPLE:
DATA> 14 1
 
Posterior distribution of P1 and P2:
(Rows and columns are expressed in percentage format.)
  
ROWS: PER_1     COLUMNS: PER_2
 
           0       10       20       30       40       50       60       70
  
  0 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
 10 0.000000 0.000000 0.000000 0.000000 0.000021 0.000389 0.003996 0.025940
 20 0.000000 0.000000 0.000000 0.000000 0.000018 0.000337 0.003457 0.022441
 30 0.000000 0.000000 0.000000 0.000000 0.000007 0.000133 0.001371 0.008899
 40 0.000000 0.000000 0.000000 0.000000 0.000002 0.000032 0.000329 0.002133
 50 0.000000 0.000000 0.000000 0.000000 0.000000 0.000005 0.000048 0.000311
 60 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000004 0.000025
 70 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000001
 80 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
 90 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
 1000.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
 
          80       90      100
  
  0 0.000000 0.000000 0.000000
 10 0.112142 0.291657 0.000000
 20 0.097016 0.252319 0.000000
 30 0.038471 0.100055 0.000000
 40 0.009219 0.023978 0.000000
 50 0.001346 0.003502 0.000000
 60 0.000107 0.000277 0.000000
 70 0.000003 0.000009 0.000000
 80 0.000000 0.000000 0.000000
 90 0.000000 0.000000 0.000000
 1000.000000 0.000000 0.000000
 
  CELL CONTENTS --
             POST:DATA

TYPE 'Y' AND RETURN TO SEE A GRAPH OF THE POSTERIOR DISTRIBUTION:
y

         -
     1.05+
         - .    .    .    .    .    .    .    .    .    .    .
 P1      - .    .    .    .    .    .    .    .    .    .    .
         -
         - .    .    .    .    .    .    .    .    .    .    .
     0.70+ .    .    .    .    .    .    .    .    .    .    .
         - .    .    .    .    .    .    .    .    .    .    .
         -
         - .    .    .    .    .    .    .    .    .    .    .
         - .    .    .    .    .    .    .    .    /    /    .
     0.35+
         - .    .    .    .    .    .    .    /    /    X    .
         - .    .    .    .    .    .    .    /    X    X    .
         -
         - .    .    .    .    .    .    .    /    X    X    .
     0.00+ .    .    .    .    .    .    .    .    .    .    .
           +---------+---------+---------+---------+---------+------P2      
        0.00      0.20      0.40      0.60      0.80      1.00

         '0' < -3.0E-02 < '.' < 8.26E-03 < '/' < 4.66E-02 < 'X' 

TYPE 'Y' AND RETURN TO SEE A TABLE OF THE POSTERIOR DISTRIBUTION
OF THE DIFFERENCE IN PROBABILITIES P2-P1:
y

 Row   DIFF     P_DIFF

   1   -1.0   0.000000
   2   -0.9   0.000000
   3   -0.8   0.000000
   4   -0.7   0.000000
   5   -0.6   0.000000
   6   -0.5   0.000000
   7   -0.4   0.000000
   8   -0.3   0.000000
   9   -0.2   0.000000
  10   -0.1   0.000001
  11    0.0   0.000011
  12    0.1   0.000116
  13    0.2   0.000907
  14    0.3   0.005484
  15    0.4   0.025466
  16    0.5   0.088886
  17    0.6   0.223011
  18    0.7   0.364461
  19    0.8   0.291657
  20    0.9   0.000000
  21    1.0   0.000000

MTB > exec 'pp_disct'

 FOR EACH P DISTRIBUTION:
 ------------------------
 INPUT LO AND HI VALUES:
DATA> 0 1
 
 INPUT NUMBER OF MODELS:
DATA> 11
 
 INPUT PROBABILITY THAT P1=P2:
DATA> .5
 
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES IN FIRST SAMPLE:
DATA> 2 13
 
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES IN SECOND SAMPLE:
DATA> 14 1
 
Posterior distribution of P1 and P2:
(Rows and columns are expressed in percentage format.)
 
 ROWS: PER_1     COLUMNS: PER_2
 
           0       10       20       30       40       50       60       70
  
  0 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
 10 0.000000 0.000000 0.000000 0.000000 0.000021 0.000389 0.003996 0.025937
 20 0.000000 0.000000 0.000000 0.000000 0.000018 0.000337 0.003457 0.022439
 30 0.000000 0.000000 0.000000 0.000001 0.000007 0.000133 0.001371 0.008898
 40 0.000000 0.000000 0.000000 0.000000 0.000017 0.000032 0.000329 0.002132
 50 0.000000 0.000000 0.000000 0.000000 0.000000 0.000047 0.000048 0.000311
 60 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000038 0.000025
 70 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000008
 80 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
 90 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
 1000.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
 
          80       90      100
  
  0 0.000000 0.000000 0.000000
 10 0.112131 0.291628 0.000000
 20 0.097007 0.252294 0.000000
 30 0.038467 0.100045 0.000000
 40 0.009218 0.023975 0.000000
 50 0.001346 0.003501 0.000000
 60 0.000107 0.000277 0.000000
 70 0.000003 0.000009 0.000000
 80 0.000000 0.000000 0.000000
 90 0.000000 0.000000 0.000000
 1000.000000 0.000000 0.000000
 
  CELL CONTENTS --
             POST:DATA
 
TYPE 'Y' AND RETURN TO SEE A GRAPH OF THE POSTERIOR DISTRIBUTION:
y

         -
     1.05+
         - .    .    .    .    .    .    .    .    .    .    .
 P1      - .    .    .    .    .    .    .    .    .    .    .
         -
         - .    .    .    .    .    .    .    .    .    .    .
     0.70+ .    .    .    .    .    .    .    .    .    .    .
         - .    .    .    .    .    .    .    .    .    .    .
         -
         - .    .    .    .    .    .    .    .    .    .    .
         - .    .    .    .    .    .    .    .    /    /    .
     0.35+
         - .    .    .    .    .    .    .    /    /    X    .
         - .    .    .    .    .    .    .    /    X    X    .
         -
         - .    .    .    .    .    .    .    /    X    X    .
     0.00+ .    .    .    .    .    .    .    .    .    .    .
           +---------+---------+---------+---------+---------+------P2      
        0.00      0.20      0.40      0.60      0.80      1.00

         '0' < -3.0E-02 < '.' < 8.26E-03 < '/' < 4.65E-02 < 'X' 

TYPE 'Y' AND RETURN TO SEE A TABLE OF THE POSTERIOR DISTRIBUTION
OF THE DIFFERENCE IN PROBABILITIES P2-P1:
y

 Row   DIFF     P_DIFF

   1   -1.0   0.000000
   2   -0.9   0.000000
   3   -0.8   0.000000
   4   -0.7   0.000000
   5   -0.6   0.000000
   6   -0.5   0.000000
   7   -0.4   0.000000
   8   -0.3   0.000000
   9   -0.2   0.000000
  10   -0.1   0.000001
  11    0.0   0.000111
  12    0.1   0.000116
  13    0.2   0.000907
  14    0.3   0.005484
  15    0.4   0.025464
  16    0.5   0.088877
  17    0.6   0.222989
  18    0.7   0.364424
  19    0.8   0.291628
  20    0.9   0.000000
  21    1.0   0.000000

MTB > read c3-c11
DATA> 0 0 0 .02 .02 .02 .06 .120 .16
DATA> 0 0 0 .0150 .015 .015 .045 .09 .12
DATA> 0 0 0 .0075 .0075 .0075 .0225 .045 .06
DATA> 0 0 0 .0025 .0025 .0025 .0075 .015 .02
DATA> 0 0 0  .0025 .0025 .0025 .0075 .015 .02 
DATA>  0 0 0  .0025 .0025 .0025 .0075 .015 .02
DATA> 0 0 0 0 0 0 0 0 0
DATA> 0 0 0 0 0 0 0 0 0
DATA> 0 0 0 0 0 0 0 0 0
DATA> end
MTB > exec 'pp_discm'

 INPUT THE NUMBER OF THE COLUMN WHICH CONTAINS THE P1 VALUES:
DATA> 1
 
 INPUT THE NUMBER OF THE COLUMN WHICH CONTAINS THE P2 VALUES:
DATA> 2
 
 INPUT THE NUMBER OF THE FIRST COLUMN WHICH CONTAINS THE PROBABILITIES:
DATA> 3
 
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES IN FIRST SAMPLE:
DATA> 2 13
 
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES IN SECOND SAMPLE:
DATA> 14 1
 
Posterior distribution of P1 and P2:
(Rows and columns are expressed in percentage format.)
  
ROWS: PER_1     COLUMNS: PER_2
 
          10       20       30       40       50       60       70       80
  
 10 0.000000 0.000000 0.000000 0.000004 0.000070 0.000723 0.014082 0.121756
 20 0.000000 0.000000 0.000000 0.000002 0.000046 0.000469 0.009137 0.079000
 30 0.000000 0.000000 0.000000 0.000000 0.000009 0.000093 0.001812 0.015663
 40 0.000000 0.000000 0.000000 0.000000 0.000001 0.000007 0.000145 0.001251
 50 0.000000 0.000000 0.000000 0.000000 0.000000 0.000001 0.000021 0.000183
 60 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000002 0.000014
 70 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
 80 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
 90 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000
 
          90
  
 10 0.422216
 20 0.273952
 30 0.054316
 40 0.004339
 50 0.000634
 60 0.000050
 70 0.000000
 80 0.000000
 90 0.000000
 
  CELL CONTENTS --
             POST:DATA

TYPE 'Y' AND RETURN TO SEE A GRAPH OF THE POSTERIOR DISTRIBUTION:
y

 P1      -    .     .      .      .     .      .      .     .      .
         -
         -    .     .      .      .     .      .      .     .      .
     0.75+
         -    .     .      .      .     .      .      .     .      .
         -
         -    .     .      .      .     .      .      .     .      .
         -
     0.50+    .     .      .      .     .      .      .     .      .
         -
         -    .     .      .      .     .      .      .     .      .
         -
         -    .     .      .      .     .      .      .     /      /
     0.25+
         -    .     .      .      .     .      .      .     X      X
         -
         -    .     .      .      .     .      .      /     X      X
           ------+---------+---------+---------+---------+---------+P2      
              0.15      0.30      0.45      0.60      0.75      0.90

         '0' < -4.5E-02 < '.' < 1.23E-02 < '/' < 7.00E-02 < 'X' 

TYPE 'Y' AND RETURN TO SEE A TABLE OF THE POSTERIOR DISTRIBUTION
OF THE DIFFERENCE IN PROBABILITIES P2-P1:
y

 Row   DIFF     P_DIFF

   1   -0.8   0.000000
   2   -0.7   0.000000
   3   -0.6   0.000000
   4   -0.5   0.000000
   5   -0.4   0.000000
   6   -0.3   0.000000
   7   -0.2   0.000000
   8   -0.1   0.000000
   9    0.0   0.000000
  10    0.1   0.000004
  11    0.2   0.000054
  12    0.3   0.000520
  13    0.4   0.004236
  14    0.5   0.029862
  15    0.6   0.147399
  16    0.7   0.395708
  17    0.8   0.422216

MTB > exec 'pp_beta'
MTB > ##################################################################
MTB > #  MACRO 'PP_BETA'                                               #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT 2 BINOMIAL PROPORTIONS                        #
MTB > #  USING INDEPENDENT BETA PRIORS FOR P1 AND P2 AND SIMULATION.   #
MTB > ##################################################################
 
FOR PROPORTION P1,
ENTER VALUES OF BETA PARAMETERS A1 AND B1:
DATA> 3 14
 
FOR PROPORTION P2,
ENTER VALUES OF BETA PARAMETERS A2 AND B2:
DATA> 15 2
 
HOW MANY VALUES OF (P1, P2) DO YOU WISH TO SIMULATE?
DATA> 1000
 
TYPE 'y' TO SEE A PLOT OF THE JOINT DISTRIBUTION
OF P1 AND P2:
y

     1.05+
         -  596+++++++++57765...
 P2      -  5++++++++++++++755352... .
         -  .5++++++++++5++322.2.. ..
         -  .4+448+++8+83352.  . .
     0.70+    23437.....32.
         -  .   .33  . 3.  .  .
         -       . .   2
         -      .
         -
     0.35+
         -
         -
         -
         -
     0.00+
           +---------+---------+---------+---------+---------+P1      
        0.00      0.20      0.40      0.60      0.80      1.00

 
TYPE 'y' TO SEE A PLOT OF THE DISTRIBUTION OF
THE DIFFERENCE IN PROPORTIONS P2-P1:
y

Each dot represents 4 points

                                           .   :
                                           : . :.    .
                                        . ::.:::: :  :
                                      :::::::::::.:  :
                                      :::::::::::::.:: :
                                 ..:::::::::::::::::::.:::
                         .     :::::::::::::::::::::::::::.
              .   . ..: .:.::.:::::::::::::::::::::::::::::....
          -------+---------+---------+---------+---------+---------P2-P1   
              0.30      0.45      0.60      0.75      0.90      1.05

 
TYPE 'y' to COMPUTE PROBABILITIES OF IMPROVEMENT
FOR P2-P1:
-----------------------------------------------------------
 Input values of possible improvement.
 The output is the probabilty PdALx that P2-P1 exceeds
 each improvement value x.  The column sim_se gives
 simulation standard errors for the estimated probabilities.
------------------------------------------------------------
y
Executing from file: MINITAB.MTB
DATA> .5 .6 .7 .8 .9
DATA> 0
DATA> end

 Row      x   PdALx  sim_se

   1    0.5   0.956   0.006
   2    0.6   0.830   0.012
   3    0.7   0.546   0.016
   4    0.8   0.229   0.013
   5    0.9   0.029   0.005
   6    0.0   1.000   0.000

MTB > exec 'pp_bet_t'
MTB > ##################################################################
MTB > #  MACRO 'PP_BET_T'                                              #
MTB > # -------------------------------------------------------------- #
MTB > #  TEST IF 2 BINOMIAL PROPORTIONS ARE EQUAL                      #
MTB > #  USING CONTINUOUS P1,P2 MODELS (BETA PRIORS).                  #
MTB > ##################################################################
 
Enter the prior probability of the null hypothesis H of equality:
DATA> .5
 
UNDER THE NULL HYPOTHESIS H THAT P1=P2
---------------------------------------
Enter the numbers a and b of the beta(a, b) distribution:
DATA> 1 1
 
UNDER THE ALTERNATIVE HYPOTHESIS K THAT P1=P2
----------------------------------------------
Enter the numbers a1 and b1 of the beta(a1, b1) distribution on P1:
DATA> 1 1
 
Enter the numbers a2 and b2 of the beta(a2, b2) distribution on P2:
DATA> 1 1
 
THE DATA
---------
Enter the number of observed successes and failures for the 1st sample:
DATA> 2 13
 
Enter the number of observed successes and failures for the 2nd sample:
DATA> 14 1
 
The Bayes factor in favor of the null hypothesis is:

BF_HK   
  0.0000894 

 
The Bayes factor against the null hypothesis is:

BF_KH   
  11180.8 

 
The posterior probability of the null hypothesis is:

prob_H  
  0.0000894 

MTB > exec 'pp_exch'
MTB > ##################################################################
MTB > #  MACRO 'PP_EXCH'                                               #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT 2 BINOMIAL PROPORTIONS                        #
MTB > #  USING AN EXCHANGEABLE PRIOR FOR P1 AND P2.                    #
MTB > ##################################################################
 
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES IN 1ST GROUP:
DATA> 0 0
 
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES IN 2ND GROUP:
DATA> 0 0
 
INPUT STANDARD DEVIATION OF THE LOGITS T1 AND T2:
DATA> .5
 
INPUT NUMBER OF SIMULATED VALUES:
DATA> 1000
 
TYPE 'y' AND RETURN TO SEE A PLOT OF THE JOINT DISTRIBUTION
OF P1 AND P2:
y

     1.05+
         -                                             ...5
 post_p2 -                               2.  4.22.2.32.435 .
         -                       .    ..  2 5.3.23.2622.39.
         -                   3 .3     22 7546.3.+59.25 2.
     0.70+                  .83 .  324235 788336958.52 2
         -             .  2 62 4.45.64824744 +5244.43.
         -        3    4    4.48.39493243  2457.45..3 .
         -          . 2  3.9834.2+.32+47453 53 .2256
         -        .3423.2.3953+5+53224  75  2 2. ..
     0.35+      . 22.. 4+539+66 734 2.. 2..2. .2.
         -     2  .3  8735353 6624852. 63 .      .
         -     .327+35544562 2..2.2  . 2    .
         -     37233454.3 .2 .42   2
         -   4267 .434..
     0.00+
           +---------+---------+---------+---------+---------+post_p1 
        0.00      0.20      0.40      0.60      0.80      1.00

 
TYPE 'y' AND RETURN TO SEE PLOTS OF THE MARGINAL DISTRIBUTIONS
OF P1 AND P2:
y
 
Posterior distribution of proportion P1:

Each dot represents 3 points
                            .
                          . :                 :
                         :: :  ..         .   :
                 .       :::::::: .: .:.  :.. :.:
                 :  :::..::::::::.::.::::.::: ::: :
              : :::::::::::::::::::::::::::::::::::    .
             :: :::::::::::::::::::::::::::::::::::: :.:
           :.::::::::::::::::::::::::::::::::::::::::::::.
         +---------+---------+---------+---------+---------+-------post_p1 
      0.00      0.20      0.40      0.60      0.80      1.00


Variable        N     Mean   Median   TrMean    StDev   SEMean
post_p1      1000  0.49238  0.47582  0.49174  0.22129  0.00700

Variable      Min      Max       Q1       Q3
post_p1   0.03479  0.95686  0.32448  0.67783

 
Posterior distribution of proportion P2:

Each dot represents 3 points
                                            .
                                            :
                                   :.       :
                      . . .  .:  ::::   :.  :
                    . : : :. ::. ::::  :::  :   .
                 :  : :.:.:: ::: ::::. :::. :  .::
             .:. ::.:.::::::::::.:::::::::::::::::.....
             ::: ::::::::::::::::::::::::::::::::::::::
           .::::::::::::::::::::::::::::::::::::::::::::::.
         +---------+---------+---------+---------+---------+-------post_p2 
      0.00      0.20      0.40      0.60      0.80      1.00


Variable        N     Mean   Median   TrMean    StDev   SEMean
post_p2      1000  0.50041  0.50506  0.50049  0.22162  0.00701

Variable      Min      Max       Q1       Q3
post_p2   0.04348  0.97014  0.32681  0.68286

 
TYPE 'y' AND RETURN TO SEE PLOT OF THE DISTRIBUTION OF P2-P1:
y

Each dot represents 5 points

                                       .
                                       :.:
                                   : : :::: :
                                   :.::::::::
                              . .  ::::::::::  ..
                              :.: :::::::::::..::
                         .....:::::::::::::::::::: .  .
                .. ....:::::::::::::::::::::::::::::.:::.... .
         +---------+---------+---------+---------+---------+-------p2-p1   
     -0.60     -0.40     -0.20      0.00      0.20      0.40


Variable        N     Mean   Median   TrMean    StDev   SEMean
p2-p1        1000  0.00802  0.01194  0.00780  0.14468  0.00458

Variable      Min      Max       Q1       Q3
p2-p1    -0.46672  0.43172 -0.07884  0.09405

MTB > exec 'pp_exch'
MTB > ##################################################################
MTB > #  MACRO 'PP_EXCH'                                               #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT 2 BINOMIAL PROPORTIONS                        #
MTB > #  USING AN EXCHANGEABLE PRIOR FOR P1 AND P2.                    #
MTB > ##################################################################
 T
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES IN 1ST GROUP:
DATA> 4 16
 A
INPUT OBSERVED NUMBER OF SUCCESSES AND FAILURES IN 2ND GROUP:
DATA> 8 12
 
INPUT STANDARD DEVIATION OF THE LOGITS T1 AND T2:
DATA> .5
 
INPUT NUMBER OF SIMULATED VALUES:
DATA> 1000
 
TYPE 'y' AND RETURN TO SEE A PLOT OF THE JOINT DISTRIBUTION
OF P1 AND P2:
y

     1.05+
         -
 post_p2 -
         -
         -
     0.70+              . .    ..
         -             3 2  5
         -        4     36 465.. 2
         -          7  79+427+34.4253 3
         -        4+9+ +++++8+266.2..
     0.35+     2 45+ ++++9+++8844542..
         -       76+++4++++++3+52..3
         -       2487367.+6. 42 .
         -     . 22.  2.
         -
     0.00+
           +---------+---------+---------+---------+---------+post_p1 
        0.00      0.20      0.40      0.60      0.80      1.00

 
TYPE 'y' AND RETURN TO SEE PLOTS OF THE MARGINAL DISTRIBUTIONS
OF P1 AND P2:
y
 
Posterior distribution of proportion P1:

Each dot represents 5 points

                           .
                           :   . : .
                           :   : : :
                           : . ::::: ::
                        .. : :::::::.:: .   .
                        :: :::::::::::::::. :
                    .: .:::::::::::::::::::.:..
               .. .::::::::::::::::::::::::::::::::..:::.... ..
          -------+---------+---------+---------+---------+---------post_p1 
              0.10      0.20      0.30      0.40      0.50      0.60


Variable        N     Mean   Median   TrMean    StDev   SEMean
post_p1      1000  0.27170  0.26398  0.26881  0.07889  0.00249

Variable      Min      Max       Q1       Q3
post_p1   0.07808  0.54887  0.21711  0.31722

 
Posterior distribution of proportion P2:

Each dot represents 7 points
                               .
                               :
                               :
                               :
                      . ...:.: ::..:
                      :.:::::: ::::: .   .
                    .:::::::::.:::::::.. :
           .. ...:::::::::::::::::::::::::::::.... .  .. ... .
          -+---------+---------+---------+---------+---------+-----post_p2 
        0.12      0.24      0.36      0.48      0.60      0.72


Variable        N     Mean   Median   TrMean    StDev   SEMean
post_p2      1000  0.35826  0.35684  0.35544  0.08964  0.00283

Variable      Min      Max       Q1       Q3
post_p2   0.12286  0.72539  0.29329  0.41049

 
TYPE 'y' AND RETURN TO SEE PLOT OF THE DISTRIBUTION OF P2-P1:
y

Each dot represents 5 points
                                      :  .
                             :    ::  :  :
                           : :   .::..:  :     :
                           : : . ::::::. :     :
                         :::.:::::::::::.: :   :
                    .::.::::::::::::::::::::. .: .
         .........::::::::::::::::::::::::::::::.:..  :  . .  . .
          -------+---------+---------+---------+---------+---------p2-p1   
             -0.12      0.00      0.12      0.24      0.36      0.48


Variable        N     Mean   Median   TrMean    StDev   SEMean
p2-p1        1000  0.08656  0.08873  0.08615  0.10264  0.00325

Variable      Min      Max       Q1       Q3
p2-p1    -0.21141  0.44013  0.01937  0.15436

**************************** CHAPTER 6 *********************************

MTB > name c1 'm' c2 'prior'
MTB > set 'm'
DATA> 174 176 178
DATA> end
MTB > set 'prior'
DATA> .333 .333 .333
DATA> name c3 'data'
MTB > set 'data'
DATA> 182 172 173 176 176 180 173 174 179 175
DATA> end
MTB > 
MTB > exec 'm_disc'
MTB > ##################################################################
MTB > #  MACRO 'M_DISC'                                                #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT A NORMAL MEAN M                               #
MTB > #  USING A DISCRETE SET OF M MODELS.                             #
MTB > # -------------------------------------------------------------- #
MTB > #  INPUT:  VALUES OF M IN COLUMN 'M' AND PRIOR PROBABILITIES     #
MTB > #          IN COLUMN 'PRIOR'                                     #
MTB > #  OUTPUT: POSTERIOR PROBABILITIES IN COLUMN 'POST'              #
MTB > ##################################################################
 
INPUT POPULATION STANDARD DEVIATION:
DATA> 3
 
OBSERVED DATA IN WORKSHEET? (TYPE 'y' OR 'n'.)
  IF YES, INPUT NUMBER OF COLUMN.
  IF NO, INPUT OBSERVED SAMPLE MEAN AND SAMPLE SIZE:
y
DATA> 3

OBS_DATA
   182    172    173    176    176    180    173    174    179    175 

   Mean of data    =      176.00
   Total number of observations in data    =     10

 Row      m      prior  M_x_PRIO      LIKE  PRODUCT       POST  M_x_POST

   1    174   0.333333    58.000    108368    36123   0.089065    15.497
   2    176   0.333333    58.667   1000000   333333   0.821871   144.649
   3    178   0.333333    59.333    108368    36123   0.089065    15.853
   4                     176.000                                 176.000

         -
     0.90+
         -                             *
 PROB    -                             *
         -                             2
         -                             *
     0.60+                             2
         -                             *
         -                             2
         -                             *
         -                             *
     0.30+                             2
         -                             *
         -                             2
         -                             *
         -    +                        2                        +
     0.00+    7                        *                        7
           --------+---------+---------+---------+---------+--------MODEL   
              174.40    175.20    176.00    176.80    177.60

MTB > exec 'normal_s'
MTB > ##################################################################
MTB > #  MACRO 'NORMAL_S'                                              #
MTB > # -------------------------------------------------------------- #
MTB > #  FINDS THE NORMAL(A,B) PRIOR DISTRIBUTION                      #
MTB > #  WHICH MATCHES TWO QUANTILES.                                  #
MTB > ##################################################################
 
Input the first probability P1 and quantile M1:
 
DATA> .5 174
 
Input the second probability P2 and quantile M2:
 
DATA> .9 180
 
The matching values of the normal density parameters
corresponding to your 2 quantiles are given by:

MEAN    
   174 

STD     
  4.68183 

MTB > exec 'm_cont'
MTB > ##################################################################
MTB > #  MACRO 'M_CONT'                                                #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT A NORMAL MEAN M                               #
MTB > #  USING A CONTINUOUS PRIOR FOR M.                               #
MTB > ##################################################################
 
DO YOU WISH TO USE A FLAT PRIOR DENSITY FOR M? (TYPE 'y' OR 'n'.)
  IF NO, INPUT MEAN AND STANDARD DEVIATION FOR THE PRIOR DENSITY..
n
DATA> 174 4.68

PR_MEAN 
   174 

PR_STD  
  4.68 

OBSERVED DATA IN WORKSHEET? (TYPE 'y' OR 'n'.)
  IF YES, INPUT NUMBER OF COLUMN.
  IF NO, INPUT OBSERVED SAMPLE MEAN, STANDARD DEVIATION, AND SAMPLE SIZE.
y

DATA> 3

OBS_DATA
   182    172    173    176    176    180    173    174    179    175 

MEAN    
   176 

STD     
  3.33333 

COUNT   
   10 

THE POSTERIOR DENSITY FOR M IS NORMAL
WITH MEAN AND STANDARD DEVIATION:

MEAN STD
  175.877     1.162 

THE PREDICTIVE DENSITY OF THE NEXT OBSERVATION
IS NORMAL WITH MEAN AND STANDARD DEVIATION:

MEAN STD
  175.877     3.969 


MTB > exec 'normal'
MTB > ##################################################################
MTB > #  MACRO 'NORMAL'                                                #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  FOR A NORMAL(M,S) DISTRIBUTION, GRAPHS DENSITY CURVE,         #
MTB > #  AND COMPUTES CUMULATIVE PROBABILITIES AND QUANTILES.          #
MTB > ##################################################################
 
INPUT THE VALUES OF THE MEAN AND STANDARD
DEVIATION OF THE NORMAL DISTRIBUTION:
DATA> 175.877 1.162
 
TYPE 'y' TO SEE A PLOT OF THE NORMAL DENSITY:
y

         -
     0.36+
         -                           ******
 density -                          *      *
         -                         *        *
         -                        *          *
     0.24+                       *            *
         -                      *              *
         -                     *                *
         -                     *                 *
         -                    *                  *
     0.12+                   *                    *
         -                 **                      **
         -                *                          *
         -              **                            **
         -          ****                                ****
     0.00+      ****                                        ****
           ------+---------+---------+---------+---------+---------+M       
             172.5     174.0     175.5     177.0     178.5     180.0

 
TYPE 'y' TO COMPUTE CUMULATIVE PROBABILITIES:
----------------------------------------------------------------
  Input values of M of interest.  The output is the column of
  values M and the column of cumulative probabilities PROB_LT.
----------------------------------------------------------------
y
DATA> 170 180 190
DATA> end

 Row      M   PROB_LT

   1    170   0.00000
   2    180   0.99981
   3    190   1.00000

TYPE 'y' TO COMPUTE QUANTILES:
----------------------------------------------------------------
  Input probabilities for which you wish to compute quantiles.
  The output is the probabilities in the column PROB and the
  corresponding quantiles in the column QUANTILE.
----------------------------------------------------------------
y
DATA> .025 .975
DATA> end

 Row    PROB  QUANTILE

   1   0.025   173.600
   2   0.975   178.154

MTB > exec 'm_norm_t'
MTB > ##################################################################
MTB > #  MACRO  'M_NORM_T'                                             #
MTB > # -------------------------------------------------------------- #
MTB > #  TESTS THE HYPOTHESIS THAT M = M0 USING A NORMAL PRIOR         #
MTB > ##################################################################
 
ENTER THE NULL HYPOTHESIS MEAN M0:
DATA> 170
 
ENTER THE PRIOR PROBABILITY OF M0:
DATA> .5
 
FOR THE ALTERNATIVE HYPOTHESIS THAT M = M0,
ENTER STANDARD DEVIATION(S) OF THE NORMAL PRIOR DISTRIBUTION:
DATA> .5 1 2 4 8
DATA> end
 
ENTER THE STANDARD DEVIATION OF THE POPULATION:
DATA> 3
 
OBSERVED DATA IN WORKSHEET? (TYPE 'y' OR 'n'.)
  IF YES, INPUT NUMBER OF COLUMN.
  IF NO, INPUT OBSERVED SAMPLE MEAN AND SAMPLE SIZE:
y

DATA> 3

OBS_DATA
   182    172    173    176    176    180    173    174    179    175 

   Mean of OBS_DATA=      176.00
   Total number of observations in OBS_DATA=     10

The Bayes factor in favor of the null hypothesis is:

BF_HK   
  0.000000   0.000092   0.018964   0.138641   0.155533 

The Bayes factor against the null hypothesis is:

BF_KH   
  4070108     10848        53         7         6 

The posterior probability of the null hypothesis is:

prob_H  
  0.000000   0.000092   0.018611   0.121760   0.134598 

MTB > exec 'm_nchi'
MTB > ##################################################################
MTB > #  MACRO 'M_NCHI'                                                #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT A NORMAL MEAN M AND STANDARD DEVIATION S      #
MTB > #  EXACT NORMAL/CHI-SQUARED INFERENCE                            #
MTB > ##################################################################

OBSERVED DATA IN WORKSHEET? (TYPE 'y' OR 'n'.)
  IF YES, INPUT NUMBER OF COLUMN.
  IF NO, INPUT OBSERVED SAMPLE MEAN, STANDARD DEVIATION, AND SAMPLE SIZE.
y
DATA> 3

OBS_DATA
   182    172    173    176    176    180    173    174    179    175 

MEAN    
   176 

STD     
  3.33333 

COUNT   
   10 

The mean M has a t(m,se,df) distribution with

 Row      m        se   df

   1    176   1.05409    9

A 95% probability interval for M is:

m_int   
  173.615   178.385 

The standard deviation S has a inverse chi-square(S,df) distribution with

 Row      s   df

   1    100    9

A 95% probability interval for S is:

s_int   
  2.29278   6.08537 

Type 'y' and return to see plots of marginal posterior densities for M and
 S:
y

         -
     1.05+
         -                           *****
 density -                          *     *
         -
         -                         *       *
     0.70+                        *         *
         -                       *           *
         -
         -                      *             *
         -                     *               *
     0.35+                    *                 *
         -                  *                     *
         -                **                       **
         -              **                           **
         -          ****                               ****
     0.00+   *******                                       *******
           --------+---------+---------+---------+---------+--------m       
               172.8     174.4     176.0     177.6     179.2


         -
     1.05+
         -                 ***
 density -                *   *
         -               *     *
         -                      *
     0.70+                       *
         -              *
         -                        *
         -             *           *
         -                          *
     0.35+                           **
         -            *                *
         -                              **
         -           *                    ***
         -          *                        ******
     0.00+      *****                             ***************
           ------+---------+---------+---------+---------+---------+s       
               1.5       3.0       4.5       6.0       7.5       9.0

**************************** CHAPTER 7 *********************************

MTB > name c1 'smoke' c2 'quit'
MTB > set 'smoke'
DATA> 4.5 5.4 5.6 5.9 6 6.1 6.4 6.6 6.6 6.6 6.9 6.9
DATA> 7.1 7.1 7.2 7.5 7.6 7.6 7.8 8 9.9
DATA> end
MTB > set 'quit'
DATA> 5.4 6.6 6.8 6.8 6.9 7.2 7.3 7.4
DATA> end
MTB > exec 'm_cont'
MTB > ##################################################################
MTB > #  MACRO 'M_CONT'                                                #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT A NORMAL MEAN M                               #
MTB > #  USING A CONTINUOUS PRIOR FOR M.                               #
MTB > ##################################################################
 
DO YOU WISH TO USE A FLAT PRIOR DENSITY FOR M? (TYPE 'y' OR 'n'.)
  IF NO, INPUT MEAN AND STANDARD DEVIATION FOR THE PRIOR DENSITY..
n
DATA> 7.7 .7

PR_MEAN 
   7.7 

PR_STD  
   0.7 

OBSERVED DATA IN WORKSHEET? (TYPE 'y' OR 'n'.)
  IF YES, INPUT NUMBER OF COLUMN.
  IF NO, INPUT OBSERVED SAMPLE MEAN, STANDARD DEVIATION, AND SAMPLE SIZE.
y

DATA> 1

OBS_DATA
   4.5    5.4    5.6    5.9    6.0    6.1    6.4    6.6    6.6    6.6    6.9 
   6.9    7.1    7.1    7.2    7.5    7.6    7.6    7.8    8.0    9.9 

MEAN    
  6.82381 

STD     
  1.11978 

COUNT   
   21 

THE POSTERIOR DENSITY FOR M IS NORMAL
WITH MEAN AND STANDARD DEVIATION:

MEAN STD
  6.92242   0.23484 

THE PREDICTIVE DENSITY OF THE NEXT OBSERVATION
IS NORMAL WITH MEAN AND STANDARD DEVIATION:

MEAN STD
  6.92242   1.16624 

MTB > exec 'm_cont'
MTB > ##################################################################
MTB > #  MACRO 'M_CONT'                                                #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT A NORMAL MEAN M                               #
MTB > #  USING A CONTINUOUS PRIOR FOR M.                               #
MTB > ##################################################################
 
DO YOU WISH TO USE A FLAT PRIOR DENSITY FOR M? (TYPE 'y' OR 'n'.)
  IF NO, INPUT MEAN AND STANDARD DEVIATION FOR THE PRIOR DENSITY..
n

DATA> 7.7 .7

PR_MEAN 
   7.7 

PR_STD  
   0.7 

OBSERVED DATA IN WORKSHEET? (TYPE 'y' OR 'n'.)
  IF YES, INPUT NUMBER OF COLUMN.
  IF NO, INPUT OBSERVED SAMPLE MEAN, STANDARD DEVIATION, AND SAMPLE SIZE.
y

DATA> 2

OBS_DATA
   5.4    6.6    6.8    6.8    6.9    7.2    7.3    7.4 

MEAN    
   6.8 

STD     
  0.630193 


COUNT   
   8 

THE POSTERIOR DENSITY FOR M IS NORMAL
WITH MEAN AND STANDARD DEVIATION:

MEAN STD
  6.91923   0.25478 

THE PREDICTIVE DENSITY OF THE NEXT OBSERVATION
IS NORMAL WITH MEAN AND STANDARD DEVIATION:

MEAN STD
  6.91923   0.81458 

MTB > exec 'mm_cont'
MTB > ##################################################################
MTB > #  MACRO 'MM_CONT'                                               #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT THE DIFFERENCE IN NORMAL MEANS M1 AND M2      #
MTB > ##################################################################
 
INPUT MEAN AND STANDARD DEVIATION FOR NORMAL DISTRIBUTION FOR MEAN M1:
DATA>  6.92242   0.23484 
 
INPUT MEAN AND STANDARD DEVIATION FOR NORMAL DISTRIBUTION FOR MEAN M2:
DATA>  6.91923   0.25478 

 6.91923   0.25478
 
THE POSTERIOR DENSITY FOR M1-M2 IS NORMAL
WITH MEAN AND STANDARD DEVIATION:

 Row          mn         st

   1   0.0031900   0.346501

MTB > exec 'mm_tt'
MTB > ##################################################################
MTB > #  MACRO 'MM_TT'                                                 #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE ABOUT THE DIFFERENCE IN TWO NORMAL MEANS            #
MTB > #  USING A CONTINUOUS PRIOR FOR M.                               #
MTB > ##################################################################
 
OBSERVED DATA IN WORKSHEET? (TYPE 'y' OR 'n'.)
y

NOTE:   
  INPUT NUMBER OF COLUMN OF FIRST DATASET                               

DATA> 1

NOTE:   
  INPUT NUMBER OF COLUMN OF SECOND DATASET                              

DATA> 2

INPUT NUMBER OF SIMULATED VALUES:
DATA> 500
 
Simulated values of M1 and M2:

Each dot represents 2 points
                                    .
                               .  :::.
                               :  ::::
                               :. ::::..:
                             :.::.::::::::
                             :::::::::::::
                            .::::::::::::: .
                      .    ::::::::::::::::::
                      : ...:::::::::::::::::: : :
               . ....::::::::::::::::::::::::::.::.:   .   .
          -----+---------+---------+---------+---------+---------+-m1      
Each dot represents 3 points
                                   .
                                   : .
                                 .::.:
                              ::.:::::.  .
                             .:::::::::..:
                           .::::::::::::::
                          .:::::::::::::::.:.
          ..  .   .. :.::::::::::::::::::::::::::.......    .   .
          -----+---------+---------+---------+---------+---------+-m2      
            6.00      6.40      6.80      7.20      7.60      8.00

 
Simulated values of M2-M1:

Each dot represents 2 points
                                 :
                               . : .
                             : :.: ::.:
                             : :::::::: .:
                             : ::::::::.:::
                            :::::::::::::::
                      . . ::::::::::::::::: : .
                     .:.:::::::::::::::::::::::.
             .....: ::::::::::::::::::::::::::::::.:....   ..
          -----+---------+---------+---------+---------+---------+-m_diff  
           -1.00     -0.50      0.00      0.50      1.00      1.50


Variable        N     Mean   Median   TrMean    StDev   SEMean
m_diff        500  -0.0124  -0.0141  -0.0139   0.3640   0.0163

Variable      Min      Max       Q1       Q3
m_diff    -1.0973   1.2697  -0.2376   0.2257

**************************** CHAPTER 8 *********************************

MTB > name c1 'temp' c2 'freq'
MTB > set 'temp'
DATA> 89 72 93 84 81 75 70 82 69 83
DATA> end
MTB > set 'freq'
DATA> 20 16 20 18 17 16 15 17 15 16
DATA> end
MTB > exec 'lin_reg'

INPUT COLUMN NUMBERS OF X AND Y DATA:
DATA> 2 1
 
THE LEAST-SQUARES LINE HAS SLOPE AND INTERCEPT:

 Row         B         A

   1   4.06665   10.6669

THE POSTERIOR DENSITY FOR b IS NORMAL
WITH MEAN AND STANDARD DEVIATION:

 Row      MEAN        STD

   1   4.06665   0.669801

Input 'y' and 'return' to obtain prediction intervals:
y

NOTE:   
  FOR PREDICTING Y FOR GIVEN VALUES OF X, INPUT X VALUES OF INTEREST:   

DATA> 16 18 20
DATA> end

NOTE:   
  THE PREDICTIVE DENSITY OF THE NEXT OBSERVATION FOR DIFFERENT          
  VALUES OF X IS NORMAL WITH MEANS AND STANDARD DEVIATIONS GIVEN BELOW: 

Row    X_    MEAN_Y     STD_Y

   1    16   75.7334   3.90558
   2    18   83.8667   3.90558
   3    20   92.0000   4.34081

MTB > read c1-c3
DATA> 11 68 3
DATA> 9 23 5
DATA> end
MTB > exec 'c_table'
MTB > ##################################################################
MTB > # MACRO 'C_TABLE'                                                #
MTB > # -------------------------------------------------------------- #
MTB > # BAYES TEST OF INDEPENDENCE FOR A 2-WAY CONTINGENCY TABLE       #
MTB > # -------------------------------------------------------------- #
MTB > # INPUT:  TABLE IN CONSECUTIVE COLUMNS OF WORKSHEET              #
MTB > # OUTPUT: BAYES FACTOR AGAINST THE HYPOTHESIS OF INDEPENDENCE    #
MTB > ##################################################################
 
INPUT THE NUMBER OF THE FIRST COLUMN WHICH CONTAINS THE CONTINGENCY TABLE:
DATA> 1
 
INPUT THE NUMBER OF COLUMNS OF THE TABLE:
DATA> 3

Expected counts are printed below observed counts

            C1       C2       C3    Total
    1       11       68        3       82
         13.78    62.71     5.51

    2        9       23        5       37
          6.22    28.29     2.49

Total       20       91        8      119

ChiSq =  0.561 +  0.447 +  1.145 +
         1.244 +  0.991 +  2.538 = 6.926
df = 2, p = 0.032
1 cells with expected counts less than 5.0

-------------------------------------------------------
The Bayes factor against the hypothesis of independence
with uniform priors is:

BAYES_F 
  1.66221 

-------------------------------------------------------

**************************** CHAPTER 9 *********************************

MTB > name c1 'model' c2 'prior'
MTB > set 'model'
DATA> .5 .25 .125
DATA> end
MTB > set 'prior'
DATA> .2 .5 .3
DATA> end
MTB > exec 'mod_disc'
MTB > ##################################################################
MTB > #  MACRO 'MOD_DISC'                                              #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE USING A FINITE COLLECTION OF MODELS.                #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  VALUES OF MODEL IN 'MODEL' AND PRIOR PROBABILITIES    #
MTB > #          IN COLUMN 'PRIOR'                                     #
MTB > #  OUTPUT: POSTERIOR PROBABILITIES IN COLUMN 'POST'              #
MTB > ##################################################################
 
INPUT THE NUMBER OF THE LIKELIHOOD:
(1-Binomial P, 2-Normal M, 3-Poisson L, 4-Hypergeometric S,
 5-Discrete Uniform N, 6-Capture/Recapture N, 7-Exponential M)
DATA> 3

INPUT   
  (sample sum, time interval)                                      

DATA> 10 24

 Row   model  prior      LIKE  PRODUCT       POST

   1   0.500    0.2   1000000   200000   0.500870
   2   0.250    0.5    393974   196987   0.493324
   3   0.125    0.3      7728     2318   0.005806

PRIOR MEAN OF MODELS:

MEAN    
  0.2625 

POSTERIOR MEAN OF MODELS:

MEAN    
  0.374492 

Storing in file: MINITAB.MTB
* NOTE  * Existing file replaced.
Executing from file: MINITAB.MTB

         -                                                        *
     0.48+                     2                                  *
         -                     *                                  *
 PROB    -                     *                                  2
         -                     2                                  *
         -                     *                                  *
     0.32+                     *                                  *
         -                     *                                  2
         -                     2                                  *
         -                     *                                  *
         -                     *                                  *
     0.16+                     2                                  2
         -                     *                                  *
         -                     *                                  *
         -                     2                                  2
         -                     *                                  *
     0.00+   +                 *                                  *
           ----+---------+---------+---------+---------+---------+--MODELS  
           0.140     0.210     0.280     0.350     0.420     0.490

MTB > name c1 'model' c2 'prior'
MTB > set 'model'
DATA> 1:200
DATA> end
MTB > let 'prior'=.005+0*'model'
MTB > exec 'mod_disc'
MTB > ##################################################################
MTB > #  MACRO 'MOD_DISC'                                              #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE USING A FINITE COLLECTION OF MODELS.                #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  VALUES OF MODEL IN 'MODEL' AND PRIOR PROBABILITIES    #
MTB > #          IN COLUMN 'PRIOR'                                     #
MTB > #  OUTPUT: POSTERIOR PROBABILITIES IN COLUMN 'POST'              #
MTB > ##################################################################
 
INPUT THE NUMBER OF THE LIKELIHOOD:
(1-Binomial P, 2-Normal M, 3-Poisson L, 4-Hypergeometric S,
 5-Discrete Uniform N, 6-Capture/Recapture N, 7-Exponential M)
DATA> 5

INPUT   
  (maximum observation, sample size)                               

DATA> 100 5
Executing from file: lk_unf_n.MTB

 Row  model   prior      LIKE   PRODUCT        POST

   1      1   0.005         0      0.00   0.0000000
   2      2   0.005         0      0.00   0.0000000
   3      3   0.005         0      0.00   0.0000000
   4      4   0.005         0      0.00   0.0000000
   5      5   0.005         0      0.00   0.0000000
   6      6   0.005         0      0.00   0.0000000
   7      7   0.005         0      0.00   0.0000000
   8      8   0.005         0      0.00   0.0000000
   9      9   0.005         0      0.00   0.0000000
  10     10   0.005         0      0.00   0.0000000
  11     11   0.005         0      0.00   0.0000000
  12     12   0.005         0      0.00   0.0000000
  13     13   0.005         0      0.00   0.0000000
  14     14   0.005         0      0.00   0.0000000
  15     15   0.005         0      0.00   0.0000000
  16     16   0.005         0      0.00   0.0000000
  17     17   0.005         0      0.00   0.0000000
  18     18   0.005         0      0.00   0.0000000
  19     19   0.005         0      0.00   0.0000000
  20     20   0.005         0      0.00   0.0000000
  21     21   0.005         0      0.00   0.0000000
  22     22   0.005         0      0.00   0.0000000
  23     23   0.005         0      0.00   0.0000000
  24     24   0.005         0      0.00   0.0000000
  25     25   0.005         0      0.00   0.0000000
  26     26   0.005         0      0.00   0.0000000
  27     27   0.005         0      0.00   0.0000000
  28     28   0.005         0      0.00   0.0000000
  29     29   0.005         0      0.00   0.0000000
  30     30   0.005         0      0.00   0.0000000
  31     31   0.005         0      0.00   0.0000000
  32     32   0.005         0      0.00   0.0000000
  33     33   0.005         0      0.00   0.0000000
  34     34   0.005         0      0.00   0.0000000
  35     35   0.005         0      0.00   0.0000000
  36     36   0.005         0      0.00   0.0000000
  37     37   0.005         0      0.00   0.0000000
  38     38   0.005         0      0.00   0.0000000
  39     39   0.005         0      0.00   0.0000000
  40     40   0.005         0      0.00   0.0000000
  41     41   0.005         0      0.00   0.0000000
  42     42   0.005         0      0.00   0.0000000
  43     43   0.005         0      0.00   0.0000000
  44     44   0.005         0      0.00   0.0000000
  45     45   0.005         0      0.00   0.0000000
  46     46   0.005         0      0.00   0.0000000
  47     47   0.005         0      0.00   0.0000000
  48     48   0.005         0      0.00   0.0000000
  49     49   0.005         0      0.00   0.0000000
  50     50   0.005         0      0.00   0.0000000
  51     51   0.005         0      0.00   0.0000000
  52     52   0.005         0      0.00   0.0000000
  53     53   0.005         0      0.00   0.0000000
  54     54   0.005         0      0.00   0.0000000
  55     55   0.005         0      0.00   0.0000000
  56     56   0.005         0      0.00   0.0000000
  57     57   0.005         0      0.00   0.0000000
  58     58   0.005         0      0.00   0.0000000
  59     59   0.005         0      0.00   0.0000000
  60     60   0.005         0      0.00   0.0000000
  61     61   0.005         0      0.00   0.0000000
  62     62   0.005         0      0.00   0.0000000
  63     63   0.005         0      0.00   0.0000000
  64     64   0.005         0      0.00   0.0000000
  65     65   0.005         0      0.00   0.0000000
  66     66   0.005         0      0.00   0.0000000
  67     67   0.005         0      0.00   0.0000000
  68     68   0.005         0      0.00   0.0000000
  69     69   0.005         0      0.00   0.0000000
  70     70   0.005         0      0.00   0.0000000
  71     71   0.005         0      0.00   0.0000000
  72     72   0.005         0      0.00   0.0000000
  73     73   0.005         0      0.00   0.0000000
  74     74   0.005         0      0.00   0.0000000
  75     75   0.005         0      0.00   0.0000000
  76     76   0.005         0      0.00   0.0000000
  77     77   0.005         0      0.00   0.0000000
  78     78   0.005         0      0.00   0.0000000
  79     79   0.005         0      0.00   0.0000000
  80     80   0.005         0      0.00   0.0000000
  81     81   0.005         0      0.00   0.0000000
  82     82   0.005         0      0.00   0.0000000
  83     83   0.005         0      0.00   0.0000000
  84     84   0.005         0      0.00   0.0000000
  85     85   0.005         0      0.00   0.0000000
  86     86   0.005         0      0.00   0.0000000
  87     87   0.005         0      0.00   0.0000000
  88     88   0.005         0      0.00   0.0000000
  89     89   0.005         0      0.00   0.0000000
  90     90   0.005         0      0.00   0.0000000
  91     91   0.005         0      0.00   0.0000000
  92     92   0.005         0      0.00   0.0000000
  93     93   0.005         0      0.00   0.0000000
  94     94   0.005         0      0.00   0.0000000
  95     95   0.005         0      0.00   0.0000000
  96     96   0.005         0      0.00   0.0000000
  97     97   0.005         0      0.00   0.0000000
  98     98   0.005         0      0.00   0.0000000
  99     99   0.005         0      0.00   0.0000000
 100    100   0.005   1000000   5000.00   0.0417410
 101    101   0.005    951468   4757.34   0.0397152
 102    102   0.005    905732   4528.66   0.0378061
 103    103   0.005    862610   4313.05   0.0360062
 104    104   0.005    821928   4109.64   0.0343081
 105    105   0.005    783527   3917.64   0.0327052
 106    106   0.005    747259   3736.30   0.0311913
 107    107   0.005    712988   3564.94   0.0297608
 108    108   0.005    680584   3402.92   0.0284083
 109    109   0.005    649931   3249.66   0.0271288
 110    110   0.005    620921   3104.61   0.0259179
 111    111   0.005    593452   2967.26   0.0247713
 112    112   0.005    567428   2837.14   0.0236850
 113    113   0.005    542760   2713.80   0.0226554
 114    114   0.005    519369   2596.85   0.0216790
 115    115   0.005    497177   2485.89   0.0207527
 116    116   0.005    476114   2380.57   0.0198735
 117    117   0.005    456111   2280.56   0.0190385
 118    118   0.005    437109   2185.55   0.0182454
 119    119   0.005    419050   2095.25   0.0174916
 120    120   0.005    401878   2009.39   0.0167748
 121    121   0.005    385543   1927.72   0.0160930
 122    122   0.005    370000   1850.00   0.0154442
 123    123   0.005    355202   1776.01   0.0148265
 124    124   0.005    341108   1705.54   0.0142382
 125    125   0.005    327680   1638.40   0.0136777
 126    126   0.005    314882   1574.41   0.0131435
 127    127   0.005    302679   1513.39   0.0126341
 128    128   0.005    291039   1455.19   0.0121483
 129    129   0.005    279932   1399.66   0.0116846
 130    130   0.005    269329   1346.65   0.0112421
 131    131   0.005    259205   1296.03   0.0108195
 132    132   0.005    249535   1247.67   0.0104158
 133    133   0.005    240294   1201.47   0.0100301
 134    134   0.005    231460   1157.30   0.0096614
 135    135   0.005    223014   1115.07   0.0093088
 136    136   0.005    214934   1074.67   0.0089716
 137    137   0.005    207204   1036.02   0.0086489
 138    138   0.005    199804    999.02   0.0083400
 139    139   0.005    192720    963.60   0.0080443
 140    140   0.005    185935    929.67   0.0077611
 141    141   0.005    179434    897.17   0.0074897
 142    142   0.005    173204    866.02   0.0072297
 143    143   0.005    167232    836.16   0.0069804
 144    144   0.005    161506    807.53   0.0067414
 145    145   0.005    156013    780.06   0.0065121
 146    146   0.005    150743    753.71   0.0062921
 147    147   0.005    145685    728.42   0.0060810
 148    148   0.005    140829    704.15   0.0058783
 149    149   0.005    136166    680.83   0.0056837
 150    150   0.005    131687    658.44   0.0054968
 151    151   0.005    127384    636.92   0.0053171
 152    152   0.005    123249    616.24   0.0051445
 153    153   0.005    119273    596.37   0.0049786
 154    154   0.005    115451    577.25   0.0048190
 155    155   0.005    111774    558.87   0.0046656
 156    156   0.005    108237    541.19   0.0045179
 157    157   0.005    104834    524.17   0.0043759
 158    158   0.005    101558    507.79   0.0042391
 159    159   0.005     98404    492.02   0.0041075
 160    160   0.005     95367    476.84   0.0039807
 161    161   0.005     92443    462.21   0.0038586
 162    162   0.005     89624    448.12   0.0037410
 163    163   0.005     86909    434.54   0.0036277
 164    164   0.005     84291    421.46   0.0035184
 165    165   0.005     81767    408.84   0.0034131
 166    166   0.005     79334    396.67   0.0033115
 167    167   0.005     76987    384.94   0.0032135
 168    168   0.005     74723    373.62   0.0031190
 169    169   0.005     72538    362.69   0.0030278
 170    170   0.005     70430    352.15   0.0029398
 171    171   0.005     68394    341.97   0.0028549
 172    172   0.005     66429    332.15   0.0027728
 173    173   0.005     64531    322.66   0.0026936
 174    174   0.005     62698    313.49   0.0026171
 175    175   0.005     60927    304.64   0.0025432
 176    176   0.005     59216    296.08   0.0024717
 177    177   0.005     57562    287.81   0.0024027
 178    178   0.005     55963    279.81   0.0023359
 179    179   0.005     54417    272.09   0.0022714
 180    180   0.005     52922    264.61   0.0022090
 181    181   0.005     51476    257.38   0.0021487
 182    182   0.005     50078    250.39   0.0020903
 183    183   0.005     48724    243.62   0.0020338
 184    184   0.005     47415    237.07   0.0019791
 185    185   0.005     46147    230.73   0.0019262
 186    186   0.005     44920    224.60   0.0018750
 187    187   0.005     43731    218.66   0.0018254
 188    188   0.005     42581    212.90   0.0017774
 189    189   0.005     41466    207.33   0.0017308
 190    190   0.005     40386    201.93   0.0016858
 191    191   0.005     39340    196.70   0.0016421
 192    192   0.005     38326    191.63   0.0015998
 193    193   0.005     37343    186.72   0.0015588
 194    194   0.005     36391    181.95   0.0015190
 195    195   0.005     35467    177.34   0.0014804
 196    196   0.005     34572    172.86   0.0014431
 197    197   0.005     33703    168.52   0.0014068
 198    198   0.005     32861    164.30   0.0013716
 199    199   0.005     32043    160.22   0.0013375
 200    200   0.005     31250    156.25   0.0013044

PRIOR MEAN OF MODELS:

MEAN    
  100.5 

POSTERIOR MEAN OF MODELS:

MEAN    
  123.976 

         -
    0.045+
         -                          *
 PROB    -                          4*
         -                          22
         -                          37
    0.030+                          373
         -                          379*
         -                          3787
         -                          37896
         -                          368++5
    0.015+                          379+++8
         -                          2789++++3
         -                          478+++++++6
         -                          278+++++++++++4
         -                          4888+++++++++++++++++++8*
    0.000+ ++++++++++++++++++++++++++47888++++++++++++++++++++
           +---------+---------+---------+---------+---------+------MODELS  
           0        40        80       120       160       200

MTB > exec 'disc_sum'

INPUT NUMBER OF COLUMN WHICH CONTAINS VALUES OF VARIABLE:
DATA> 1
 
INPUT NUMBER OF COLUMN WHICH CONTAINS PROBABILITIES:
DATA> 51
 
TYPE 'y' TO SEE A PLOT OF THE PROBABILITIES:
n

TYPE 'y' TO GET SUMMARIES OF THE DISTRIBUTION:
y

 Row   MODE      MEAN       STD

   1    100   123.976   22.7748

 
TYPE 'y' TO COMPUTE CUMULATIVE PROBABILITIES:
--------------------------------------------------------------------
  Input values of variable of interest.  The output is the column of
  values and the column of cumulative probabilities PROB_LE.
--------------------------------------------------------------------
y
DATA> 150
DATA> end

 Row  VALUE    PROB_LE

   1    150   0.861175

TYPE 'y' TO COMPUTE PROBABILITY INTERVALS:
--------------------------------------------------------------------
  Input list of probabilities.  For each probability p, the
  set of values of the variable for which the probability content
  of the set exceeds p is given.
--------------------------------------------------------------------
y
DATA> .9
DATA> end

PROB_SET
  0.90334 

SET     
   100    101    102    103    104    105    106    107    108    109    110 
   111    112    113    114    115    116    117    118    119    120    121 
   122    123    124    125    126    127    128    129    130    131    132 
   133    134    135    136    137    138    139    140    141    142    143 
   144    145    146    147    148    149    150    151    152    153    154 
   155    156    157    158    159 

--------------------------------------------------------------------------
MTB > name c1 'model' c2 'prior'
MTB > set 'model'
DATA> 0:100
DATA> end
MTB > let 'prior'=0*'model'+1/101
MTB > exec 'mod_disc'
MTB > ##################################################################
MTB > #  MACRO 'MOD_DISC'                                              #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE USING A FINITE COLLECTION OF MODELS.                #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  VALUES OF MODEL IN 'MODEL' AND PRIOR PROBABILITIES    #
MTB > #          IN COLUMN 'PRIOR'                                     #
MTB > #  OUTPUT: POSTERIOR PROBABILITIES IN COLUMN 'POST'              #
MTB > ##################################################################
 
INPUT THE NUMBER OF THE LIKELIHOOD:
(1-Binomial P, 2-Normal M, 3-Poisson L, 4-Hypergeometric S,
 5-Discrete Uniform N, 6-Capture/Recapture N, 7-Exponential M)
DATA> 4

INPUT   
  (population size, sample size, number of successes)              

DATA> 100 20 12

 Row  model      prior      LIKE   PRODUCT        POST

   1      0   0.009901         0      0.00   0.0000000
   2      1   0.009901         0      0.00   0.0000000
   3      2   0.009901         0      0.00   0.0000000
   4      3   0.009901         0      0.00   0.0000000
   5      4   0.009901         0      0.00   0.0000000
   6      5   0.009901         0      0.00   0.0000000
   7      6   0.009901         0      0.00   0.0000000
   8      7   0.009901         0      0.00   0.0000000
   9      8   0.009901         0      0.00   0.0000000
  10      9   0.009901         0      0.00   0.0000000
  11     10   0.009901         0      0.00   0.0000000
  12     11   0.009901         0      0.00   0.0000000
  13     12   0.009901         0      0.00   0.0000000
  14     13   0.009901         0      0.00   0.0000000
  15     14   0.009901         0      0.00   0.0000000
  16     15   0.009901         0      0.00   0.0000000
  17     16   0.009901         1      0.01   0.0000000
  18     17   0.009901         2      0.02   0.0000001
  19     18   0.009901         6      0.06   0.0000003
  20     19   0.009901        15      0.15   0.0000006
  21     20   0.009901        34      0.34   0.0000014
  22     21   0.009901        72      0.71   0.0000030
  23     22   0.009901       141      1.40   0.0000059
  24     23   0.009901       265      2.63   0.0000111
  25     24   0.009901       475      4.70   0.0000198
  26     25   0.009901       817      8.09   0.0000341
  27     26   0.009901      1355     13.42   0.0000566
  28     27   0.009901      2175     21.54   0.0000908
  29     28   0.009901      3389     33.55   0.0001414
  30     29   0.009901      5137     50.86   0.0002144
  31     30   0.009901      7596     75.21   0.0003171
  32     31   0.009901     10976    108.67   0.0004581
  33     32   0.009901     15522    153.69   0.0006479
  34     33   0.009901     21521    213.08   0.0008983
  35     34   0.009901     29286    289.96   0.0012224
  36     35   0.009901     39159    387.71   0.0016345
  37     36   0.009901     51505    509.95   0.0021498
  38     37   0.009901     66693    660.33   0.0027838
  39     38   0.009901     85090    842.47   0.0035517
  40     39   0.009901    107043   1059.83   0.0044680
  41     40   0.009901    132862   1315.46   0.0055457
  42     41   0.009901    162783   1611.71   0.0067946
  43     42   0.009901    196990   1950.39   0.0082225
  44     43   0.009901    235547   2332.15   0.0098318
  45     44   0.009901    278407   2756.51   0.0116209
  46     45   0.009901    325411   3221.89   0.0135828
  47     46   0.009901    376213   3724.88   0.0157033
  48     47   0.009901    430338   4260.77   0.0179625
  49     48   0.009901    487160   4823.37   0.0203343
  50     49   0.009901    545885   5404.80   0.0227855
  51     50   0.009901    605615   5996.19   0.0252787
  52     51   0.009901    665240   6586.53   0.0277675
  53     52   0.009901    723622   7164.57   0.0302044
  54     53   0.009901    779502   7717.85   0.0325368
  55     54   0.009901    831626   8233.93   0.0347125
  56     55   0.009901    878708   8700.08   0.0366777
  57     56   0.009901    919530   9104.26   0.0383817
  58     57   0.009901    952999   9435.64   0.0397787
  59     58   0.009901    978043   9683.60   0.0408241
  60     59   0.009901    993923   9840.82   0.0414869
  61     60   0.009901   1000000   9900.99   0.0417405
  62     61   0.009901    995919   9860.59   0.0415702
  63     62   0.009901    981639   9719.20   0.0409741
  64     63   0.009901    957364   9478.86   0.0399609
  65     64   0.009901    923559   9144.15   0.0385498
  66     65   0.009901    880990   8722.68   0.0367730
  67     66   0.009901    830701   8224.76   0.0346739
  68     67   0.009901    773867   7662.05   0.0323016
  69     68   0.009901    711925   7048.76   0.0297161
  70     69   0.009901    646388   6399.88   0.0269806
  71     70   0.009901    578831   5731.00   0.0241607
  72     71   0.009901    510847   5057.90   0.0213231
  73     72   0.009901    443947   4395.52   0.0185306
  74     73   0.009901    379543   3757.85   0.0158423
  75     74   0.009901    318811   3156.54   0.0133073
  76     75   0.009901    262791   2601.89   0.0109691
  77     76   0.009901    212234   2101.33   0.0088588
  78     77   0.009901    167640   1659.81   0.0069974
  79     78   0.009901    129240   1279.61   0.0053946
  80     79   0.009901     96999    960.39   0.0040488
  81     80   0.009901     70668    699.68   0.0029497
  82     81   0.009901     49795    493.02   0.0020785
  83     82   0.009901     33789    334.54   0.0014104
  84     83   0.009901     21958    217.40   0.0009165
  85     84   0.009901     13573    134.39   0.0005666
  86     85   0.009901      7911     78.33   0.0003302
  87     86   0.009901      4297     42.55   0.0001794
  88     87   0.009901      2141     21.20   0.0000894
  89     88   0.009901       957      9.48   0.0000400
  90     89   0.009901       371      3.67   0.0000155
  91     90   0.009901       118      1.17   0.0000049
  92     91   0.009901        28      0.28   0.0000012
  93     92   0.009901         1      0.01   0.0000001
  94     93   0.009901         0      0.00   0.0000000
  95     94   0.009901         0      0.00   0.0000000
  96     95   0.009901         0      0.00   0.0000000
  97     96   0.009901         0      0.00   0.0000000
  98     97   0.009901         0      0.00   0.0000000
  99     98   0.009901         0      0.00   0.0000000
 100     99   0.009901         0      0.00   0.0000000
 101    100   0.009901         0      0.00   0.0000000

PRIOR MEAN OF MODELS:

MEAN    
   50 

POSTERIOR MEAN OF MODELS:

MEAN    
  59.2748 

         -
    0.045+
         -                              *22
 PROB    -                             *3323
         -                            *433433
         -                            2232232*
    0.030+                           244344343
         -                           4433223442
         -                          44432443344
         -                         *443342233342
         -                         5553424334456
    0.015+                        466442423334463
         -                       2874434222334669*
         -                      2+866443444434458+
         -                     4++965443222244579++
         -                   9++++874444444444468+++6
    0.000+ +++++++++++++++++++++975443222222234457++++++++++++
           +---------+---------+---------+---------+---------+------MODELS  
           0        20        40        60        80       100

MTB > name c1 'model' c2 'prior1' c3 'prior2'
MTB > set 'model'
DATA> .2:.34/.02
DATA> end
MTB > set 'prior1'
DATA> .05 .05 .1 .25 .25 .15 .10 .05
DATA> set 'prior2'
DATA> .2 .2 .2 .15 .1 .05 .05 .05
DATA> end
MTB > prin c1-c3

 Row  model  prior1  prior2

   1   0.20    0.05    0.20
   2   0.22    0.05    0.20
   3   0.24    0.10    0.20
   4   0.26    0.25    0.15
   5   0.28    0.25    0.10
   6   0.30    0.15    0.05
   7   0.32    0.10    0.05
   8   0.34    0.05    0.05

MTB > exec 'mod_crit'
MTB > ##################################################################
MTB > #  MACRO 'MOD_CRIT'                                              #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE USING A FINITE COLLECTION OF MODELS.                #
MTB > #  AND TWO PRIOR DISTRIBUTIONS                                   #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  VALUES OF MODEL IN 'MODEL' AND PRIOR PROBABILITIES    #
MTB > #          IN COLUMNS 'PRIOR1' AND 'PRIOR2'                      #
MTB > #  OUTPUT: POSTERIOR PROBABILITIES CORRESPONDING TO 2 PRIORS     #
MTB > #          IN COLUMN 'POST1' AND 'POST2'                         #
MTB > #          BAYES FACTOR COMPARING TWO PRIORS                     #
MTB > ##################################################################
 
INPUT THE NUMBER OF THE LIKELIHOOD:
(1-Binomial P, 2-Normal M, 3-Poisson L, 4-Hypergeometric S,
 5-Discrete Uniform N, 6-Capture/Recapture N, 7-Exponential M)
DATA> 1

INPUT   
  (number of successes, number of failures)                        

DATA> 10 20

 Row  model  prior1  prior2      POST1      POST2

   1   0.20    0.05    0.20   0.015655   0.084360
   2   0.22    0.05    0.20   0.024472   0.131873
   3   0.24    0.10    0.20   0.069496   0.187250
   4   0.26    0.25    0.15   0.226925   0.183429
   5   0.28    0.25    0.10   0.275262   0.148333
   6   0.30    0.15    0.05   0.187430   0.084169
   7   0.32    0.10    0.05   0.133430   0.089878
   8   0.34    0.05    0.05   0.067331   0.090708

TYPE 'y' AND RETURN FOR SUMMARIES:
y
 
FOR FIRST SET OF PRIOR PROBABILITIES:
-------------------------------------

PRIOR MEAN OF MODELS:

MEAN    
  0.274 

POSTERIOR MEAN OF MODELS:

MEAN    
  0.283087 

FOR SECOND SET OF PRIOR PROBABILITIES:
-------------------------------------
 
PRIOR MEAN OF MODELS:

MEAN    
  0.247 

POSTERIOR MEAN OF MODELS:

MEAN    
  0.264901 

--------------------------------------------------------
 
BAYES FACTOR IN FAVOR OF FIRST SET OF PRIOR PROBABILITIES:

BAYES_F 
  1.34720 

 
TYPE 'y' AND RETURN TO SEE PLOTS:
y

PLOT OF POSTERIOR PROBABILITIES FOR FIRST PRIOR:

         -
     0.30+
         -                                 *
 PROB    -                                 *
         -                                 2
         -                         2       *
     0.20+                         2       2
         -                         2       *       2
         -                         *       2       2
         -                         2       *       3       *
         -                         2       2       2       3
     0.10+                         2       *       2       3
         -                         *       *       2       3
         -                 6       2       2       2       3       6
         -                 6       2       *       2       3       6
         - 8       +       6       2       2       2       3       6
     0.00+ +       9       3       *       *       2       2       3
           +---------+---------+---------+---------+---------+------MODELS  
       0.200     0.225     0.250     0.275     0.300     0.325


PLOT OF POSTERIOR PROBABILITIES FOR SECOND PRIOR:

         -                 *
    0.180+                 *       2
         -                 *       *
 PROB    -                 *       *
         -                 2       *       2
         -         *       *       2       2
    0.120+         2       *       *       *
         -         2       2       *       2
         -         2       *       2       *                       *
         - 2       2       *       *       2       2       3       2
         - 3       *       *       *       2       3       3       3
    0.060+ 3       2       2       2       *       3       2       3
         - 3       2       *       *       2       3       3       2
         - 2       2       *       *       *       2       3       3
         - 3       2       2       2       2       3       2       3
         - 3       2       *       *       2       3       3       2
    0.000+ 2       *       *       *       *       2       2       2
           +---------+---------+---------+---------+---------+------MODELS  
       0.200     0.225     0.250     0.275     0.300     0.325


**************************** CHAPTER 10 *********************************

MTB > name c1 'prior_s'
MTB > rand 1000 'prior_s';
SUBC> normal 6.9 .4.
MTB > let 'prior_s'=exp('prior_s')
MTB > exec 'mod_cont'
MTB > ##################################################################
MTB > #  MACRO 'MOD_CONT'                                              #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE USING CONTINUOUS MODELS.                            #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  SIMULATED VALUES OF PRIOR IN 'PRIOR_S'                #
MTB > #  OUTPUT: SIMULATED VALUES FROM POSTERIOR IN 'POST_S'           #
MTB > ##################################################################
 
INPUT THE NUMBER OF THE LIKELIHOOD:
(1-Binomial P, 2-Normal M, 3-Poisson L, 4-Hypergeometric S,
 5-Discrete Uniform N, 6-Capture/Recapture N, 7-Exponential M)
DATA> 6

INPUT   
  (number of marked items, sample size, number marked in sample)   

DATA> 100 40 5
 
Input number of simulated values:
DATA> 1000
Executing from file: lk_cap_n.MTB

Each dot represents 5 points
                       .
                     . :
                  ::::.::
                 ::::::::..
                 :::::::::::
                .::::::::::: .
               .::::::::::::::.:
               :::::::::::::::::::. .
             ..::::::::::::::::::::.::::.....:  ..   .  .    .
         +---------+---------+---------+---------+---------+-------prior_s 
Each dot represents 7 points


                   ..  :
                  .::  :
                 :::::.:
                 :::::::: .
                 ::::::::::
                .::::::::::.
               .::::::::::::...
             . ::::::::::::::::.:........ .  .
         +---------+---------+---------+---------+---------+-------POST_S  
         0       700      1400      2100      2800      3500

MTB > describe 'prior_s' 'post_s'

Variable        N     Mean   Median   TrMean    StDev   SEMean
prior_s      1000   1056.5    973.9   1022.2    453.8     14.4
POST_S       1000   909.58   860.38   889.20   308.11     9.74

Variable      Min      Max       Q1       Q3
prior_s     281.2   3650.3    731.0   1271.1
POST_S     281.21  2516.90   681.46  1063.83

MTB > rand 900 'prior_s';
SUBC> beta 20.4 47.6.
MTB > rand 100 c2;
SUBC> unif 0 1.
MTB > stack 'prior_s' c2 'prior_s'
MTB > exec 'mod_cont'
MTB > ##################################################################
MTB > #  MACRO 'MOD_CONT'                                              #
MTB > # -------------------------------------------------------------- #
MTB > #  INFERENCE USING CONTINUOUS MODELS.                            #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  SIMULATED VALUES OF PRIOR IN 'PRIOR_S'                #
MTB > #  OUTPUT: SIMULATED VALUES FROM POSTERIOR IN 'POST_S'           #
MTB > ##################################################################
 
INPUT THE NUMBER OF THE LIKELIHOOD:
(1-Binomial P, 2-Normal M, 3-Poisson L, 4-Hypergeometric S,
 5-Discrete Uniform N, 6-Capture/Recapture N, 7-Exponential M)
DATA> 1

INPUT   
  (number of successes, number of failures)                        

DATA> 30 20
 
Input number of simulated values:
DATA> 1000

Each dot represents 9 points



                       .
                       :::
                      ::::
                     ::::::.
                     :::::::
                    :::::::::
                   .::::::::::
          .........::::::::::::...... ...... ..............
         +---------+---------+---------+---------+---------+-------prior_s 
Each dot represents 14 points


                                       .
                                       :
                                       :
                                      .:
                                   .  ::
                                  .:  :::. :
                             . .  ::: ::::::  .
                         ...::::..::: :::::: .::.
         +---------+---------+---------+---------+---------+-------POST_S  
      0.00      0.20      0.40      0.60      0.80      1.00

**************************** CHAPTER 11 *********************************

MTB > type 'logpost1.MTB'

##################################################################                            
#  MACRO 'LOGPOST1'                                              #                            
# -------------------------------------------------------------- #                            
#  DEFINITION OF THE LOGARITHM OF A ONE PARAMETER                #                            
#  POSTERIOR DENSITY                                             #                            
##################################################################                            
                                                                                                                                                               
###############################################                                                                  
#  binomial problem - cauchy prior            #                                                                  
#  x - logit of probability                   #                                                                  
###############################################                                                                  
                                                                                                                                                               
let k11=1                                                                                                                                              
let k12=9                                                                                                                                              
let 'f'=k11*'x'-(k11+k12)*log(1+exp('x'))-log(1+'x'**2)                                                  
                                                                                                                                                               
MTB > type 'logpost2.MTB'

##################################################################                            
#  MACRO 'LOGPOST2'                                              #                            
# -------------------------------------------------------------- #                            
#  DEFINITION OF THE LOGARITHM OF A TWO PARAMETER                #                            
#  POSTERIOR DENSITY                                             #                            
##################################################################                            
                                                                                                                                                               
###############################################                                                                  
#  2 binomial problem                         #                                                                  
#  t1 - difference in odds ratios             #                                                                  
#  t2 - sum of odds ratios                    #                                                                  
###############################################                                                                  
                                                                                                                                                               
set 'data'                                                                                                                                            
1 10 3 12                                                                                                                                              
                                                                                                                                                               
let k21='data'(1)                                                                                                                              
let k22='data'(2)                                                                                                                              
let k23='data'(3)                                                                                                                              
let k24='data'(4)                                                                                                                              
                                                                                                                                                               
let c201=('x'+'y')/2                                                                                                                        
let c202=('y'-'x')/2                                                                                                                        
let 'f'=k21*c201-(k21+k22)*log(1+exp(c201))+k23*c202-(k23+k24)*log(1+exp(c202))  

MTB > exec 'laplace1'
MTB > ##################################################################
MTB > #  MACRO 'LAPLACE1'                                              #
MTB > # -------------------------------------------------------------- #
MTB > #  SUMMARIZING A 1-PARAMETER POSTERIOR USING THE LAPLACE METHOD. #
MTB > #  DEFINITION OF LOG POSTERIOR IN MACRO 'LOGPOST1'                #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  GUESS AT POSTERIOR MODE                               #
MTB > #          NUMBER OF ITERATIONS                                  #
MTB > #  OUTPUT: CURRENT ESTIMATE AT MODE                              #
MTB > #          ASSOCIATED STANDARD DEVIATION AND ESTIMATE AT INTEGRAL#
MTB > ##################################################################
 
INPUT GUESS AT POSTERIOR MODE:
DATA> 0
 
INPUT NUMBER OF ITERATIONS:
DATA> 5

 Row       MODE        STD  LOG_INTG

   1  -0.886723   0.470836  -6.76578

 Row      MODE        STD  LOG_INTG

   1  -1.30571   0.673015    -4.394

 Row      MODE        STD  LOG_INTG

   1  -1.41766   0.819856  -3.97834

 Row      MODE        STD  LOG_INTG

   1  -1.42373   0.857813  -3.92344

 Row      MODE        STD  LOG_INTG

   1  -1.42381   0.868545  -3.91098

MTB > exec 'laplace2'
MTB > ##################################################################
MTB > #  MACRO 'LAPLACE2'                                              #
MTB > # -------------------------------------------------------------- #
MTB > #  SUMMARIZING A 2-PARAMETER POSTERIOR USING LAPLACE METHOD.     #
MTB > #  DEFINITION OF LOG POSTERIOR IN MACRO 'LOGPOST2'               #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  GUESS AT MODE                                         #
MTB > #          NUMBER OF ITERATIONS                                  #
MTB > #  OUTPUT: CURRENT ESTIMATE AT MODE                              #
MTB > #          ASSOCIATED COVARIANCE MATRIX AND INTEGRAL ESTIMATE    #
MTB > ##################################################################
 
INPUT GUESS AT MODE:
DATA> 1 1
 
INPUT NUMBER OF ITERATIONS:
DATA> 5

 Row      MN_1     STD_1      MN_2     STD_2     COVAR  LOG_INTG

   1  -1.04684   0.85129  -3.43018   0.85129   0.19511  -22.3648

 Row       MN_1     STD_1      MN_2     STD_2     COVAR  LOG_INTG

   1  -0.927094   1.20075  -3.67809   1.20075   0.69814  -8.83597

 Row       MN_1     STD_1      MN_2     STD_2      COVAR  LOG_INTG

   1  -0.916306   1.23626  -3.68887   1.23626   0.702681  -8.71386

 Row       MN_1     STD_1      MN_2     STD_2      COVAR  LOG_INTG

   1  -0.916094   1.24168  -3.68866   1.24168   0.689256  -8.69772

 Row      MN_1     STD_1      MN_2     STD_2      COVAR  LOG_INTG

   1  -0.91617   1.28012  -3.68882   1.28012   0.799844  -8.66131

MTB > exec 'ad_quad1'
MTB > ##################################################################
MTB > #  MACRO 'AD_QUAD1'                                              #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  SUMMARIZING A 1-PARAMETER POSTERIOR USING ADAPTIVE QUADRATURE.#
MTB > #  DEFINITION OF LOG POSTERIOR IN MACRO 'LOGPOST1'               #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  MEAN AND STANDARD DEVIATION                           #
MTB > #          NUMBER OF ITERATIONS                                  #
MTB > #  OUTPUT: FINAL GRID IN 'X', DENSITY VALUES IN 'F',             #
MTB > #          WEIGHTS IN 'WX'                                       #
MTB > ##################################################################
 
INPUT MEAN AND STANDARD DEVIATION:
DATA> 0 1
 
INPUT NUMBER OF ITERATIONS:
DATA> 5

-
   0.0090+                      *
         -
 density -
         -
         -
   0.0060+
         -                 *
         -
         -                           *
         -
   0.0030+
         -
         -           *
         -
         -
   0.0000+     *                         *    *    *     *     *
           --------+---------+---------+---------+---------+--------x       
                -4.0      -2.0       0.0       2.0       4.0

         -
   0.0090+                                *
         -
 density -
         -
         -
   0.0060+                            *
         -
         -
         -
         -
   0.0030+                                     *
         -                       *
         -
         -
         -                  *
   0.0000+      *     *                             *     *     *
           --------+---------+---------+---------+---------+--------x       
                -6.0      -4.0      -2.0       0.0       2.0

         -
   0.0090+                                *
         -
 density -
         -
         -
   0.0060+                            *
         -
         -
         -
         -
   0.0030+
         -                       *             *
         -
         -
         -                 *
   0.0000+     *      *                              *    *      *
           --------+---------+---------+---------+---------+--------x       
                -6.0      -4.0      -2.0       0.0       2.0

         -
   0.0090+                                *
         -
 density -
         -
         -
   0.0060+                            *
         -
         -
         -
         -
   0.0030+
         -                      *              *
         -
         -
         -                 *
   0.0000+     *      *                              *    *      *
           --------+---------+---------+---------+---------+--------x       
                -6.0      -4.0      -2.0       0.0       2.0

         -
   0.0090+                                *
         -
 density -
         -
         -
   0.0060+                            *
         -
         -
         -
         -
   0.0030+
         -                      *              *
         -
         -
         -                 *
   0.0000+     *      *                              *    *      *
           --------+---------+---------+---------+---------+--------x       
                -6.0      -4.0      -2.0       0.0       2.0

Row      MEAN       STD  LOG_INTG

   1  -1.78599   0.99106  -3.86880
   2  -1.80105   1.02136  -3.86742
   3  -1.80249   1.02268  -3.86801
   4  -1.80254   1.02275  -3.86802
   5  -1.80254   1.02275  -3.86803

MTB > exec 'ad_quad2'
MTB > ##################################################################
MTB > #  MACRO 'AD_QUAD2'                                              #
MTB > #  (CHARACTER GRAPHICS VERSION)                                  #
MTB > # -------------------------------------------------------------- #
MTB > #  SUMMARIZING A 2-PARAMETER POSTERIOR USING ADAPTIVE QUADRATURE.#
MTB > #  DEFINITION OF LOG POSTERIOR IN MACRO 'LOGPOST2'               #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  MEANS, STANDARD DEVIATIONS, AND COVARIANCE            #
MTB > #          NUMBER OF ITERATIONS                                  #
MTB > #  OUTPUT: FINAL GRID IN 'X','Y', DENSITY VALUES IN 'F',         #
MTB > ##################################################################
 
INPUT MX, SX, MY, SY, COV:
DATA> 0 1 0 1 0
 
INPUT NUMBER OF ITERATIONS:
DATA> 5

 y       -
         -     .     .     .    .    .   .    .    .     .     .
         -
      3.5+     .     .     .    .    .   .    .    .     .     .
         -     .     .     .    .    .   .    .    .     .     .
         -
         -     .     .     .    .    .   .    .    .     .     .
         -     .     .     .    .    .   .    .    .     .     .
      0.0+
         -     .     .     .    .    .   .    .    .     .     .
         -     .     .     .    .    /   /    .    .     .     .
         -
         -     .     .     .    X    X   X    /    .     .     .
     -3.5+     .     .     X    X    X   X    /    .     .     .
         -
         -     .     /     X    X    X   /    .    .     .     .
         -
           --------+---------+---------+---------+---------+--------x       
                -4.0      -2.0       0.0       2.0       4.0

         '0' < -1.4E-02 < '.' < 8.15E-03 < '/' < 3.06E-02 < 'X' 

 y       -                                                    .
         -                                         .    .
         -                           .   .    .         .     .
      0.0+                 .    .             .    .          .
         -      .     .         .    .   .    .    .    .     .
         -            .    .         .   /         .    .     .
         -      .     .    .    .    X   X    /    .    .     .
         -      .          .    .    X   X    X    .    .
     -4.0+      .     .    .    /        X    X         .     .
         -      .     .    /    X    X   X    /    .    .     .
         -      .     .    /    X    X   /    .    .          .
         -      .     .         /    /        .    .    .     .
         -            .    /    .    .   .         .    .
     -8.0+      .     .    .             .    .
         -      .          .    .    .
         -      .     .
         -
           --+---------+---------+---------+---------+---------+----x       
          -7.5      -5.0      -2.5       0.0       2.5       5.0

         '0' < -1.1E-02 < '.' < 9.24E-03 < '/' < 2.91E-02 < 'X' 

         -                                                    .
 y       -                                         .    .     .
         -                                    .         .     .
         -                          .    .    .    .    .     .
      0.0+                 .    .   .    .    .    2    .     .
         -           .     .    .   .    .    .    .    2     .
         -     .     .     .    .   X    2    X    .    .     2
         -     .     .     .    /   X    X    X    .    .     .
         -     .     .     .    2   X    /    2    .    .
     -7.0+     2     .     /    /   /    .    .    .    .     .
         -     .     2     .    .   2    .    .    .
         -     .     .     .    .        .
         -     .     .     .    .   .
         -     .     .     .
    -14.0+     .
         -
         -
           --+---------+---------+---------+---------+---------+----x       
          -9.0      -6.0      -3.0       0.0       3.0       6.0

         '0' < -1.0E-02 < '.' < 5.83E-03 < '/' < 2.21E-02 < 'X' 

      7.0+
         -                                                       .
 y       -                                           .    .      .
         -                                      .    .    .      .
         -                            .    .    .    .    .      .
      0.0+                  .    .    .    .    .    .    .      .
         -             .    .    .    .    .    .    .    2      2
         -       .     .    .    .    X    2    /    .    .      .
         -       .     .    .    /    X    X    X    .    .      .
         -       .     .    .    2    X    /    2    .    .      .
     -7.0+       .     .    /    /    /    .    .    .    .
         -       2     .    .    .    .    .    .    .
         -       .     2    .    .    .    .
         -       .     .    .    .    .
         -       .          .
    -14.0+       .     .
         -
           ----+---------+---------+---------+---------+---------+--x       
            -9.0      -6.0      -3.0       0.0       3.0       6.0

         '0' < -1.0E-02 < '.' < 5.68E-03 < '/' < 2.18E-02 < 'X' 

      7.0+
         -                                                       .
 y       -                                           .    .      .
         -                                      .    .    .      .
         -                            .    .    .    .    .      .
      0.0+                  .    .    .    .    .    .    .      .
         -             .    .    .    .    .    .    .    2      2
         -       .     .    .    .    X    2    /    .    .      .
         -       .     .    .    /    X    X    X    .    .      .
         -       .     .    .    2    X    /    2    .    .      .
     -7.0+       .     .    /    /    /    .    .    .    .
         -       2     .    .    .    .    .    .    .
         -       .     2    .    .    .    .
         -       .     .    .    .    .
         -       .          .
    -14.0+       .     .
         -
           ----+---------+---------+---------+---------+---------+--x       
            -9.0      -6.0      -3.0       0.0       3.0       6.0

         '0' < -1.0E-02 < '.' < 5.68E-03 < '/' < 2.18E-02 < 'X' 

Row      MN_1     STD_1      MN_2     STD_2     COVAR  LOG_INTG

   1  -0.98655   1.19910  -3.84017   0.96958   0.37392  -8.78444
   2  -1.29675   1.46749  -4.33294   1.45820   1.18403  -8.60754
   3  -1.30790   1.48900  -4.34742   1.48991   1.25498  -8.60532
   4  -1.30811   1.48940  -4.34756   1.49036   1.25619  -8.60529
   5  -1.30812   1.48940  -4.34756   1.49037   1.25621  -8.60529

MTB > exec 'metrop'
MTB > ##################################################################
MTB > #  MACRO 'METROP'                                                #
MTB > # -------------------------------------------------------------- #
MTB > #  SIMULATING A 1-PARAMETER POSTERIOR USING THE METROPOLIS METHOD#
MTB > #  DEFINITION OF LOG POSTERIOR IN MACRO 'LOGPOST1'                #
MTB > #--------------------------------------------------------------- #
MTB > #  INPUT:  STARTING VALUE                                        #
MTB > #          NUMBER OF ITERATIONS                                  #
MTB > #  OUTPUT: SIMULATED SAMPLE IN COLUMN 'POST_S'                   #
MTB > ##################################################################
 
INPUT NUMBER OF ITERATIONS:
DATA> 500
 
INPUT SCALE OF NORMAL INCREMENT DENSITY:
DATA> 1
 
INPUT STARTING VALUE:
DATA> 0

Each dot represents 2 points
                                              :
                                        :. :  :
                                 :      :: :  : .
                                 : .    ::.:. : :   .
                                 : ::..::::::.: :.:::  .
                              . :: ::::::::::::::::::: :   :
                 .      .  .:.:.:::::::::::::::::::::: ::. :
           :     :  ...:::::::::::::::::::::::::::::::::::.:..:
         +---------+---------+---------+---------+---------+-------POST_S  
      -5.0      -4.0      -3.0      -2.0      -1.0       0.0

MTB > describe 'post_s'

Variable        N     Mean   Median   TrMean    StDev   SEMean
POST_S        500  -1.7252  -1.6693  -1.7012   0.9493   0.0425

Variable      Min      Max       Q1       Q3
POST_S    -4.7760   0.3120  -2.3659  -1.0699

MTB > exec 'gibbs'

INPUT NUMBER OF ITERATIONS:
DATA> 500
 
INPUT SCALES OF NORMAL INCREMENT DENSITIES:
DATA> 1 1
 
INPUT STARTING VALUE:
DATA> 0 0
MTB > plot 'post_y' 'post_x'

         -
 post_y  -                            *    **
         -                            *   **4 * 2
         -                             2*  2 *33*
     -2.5+                  4  * *  **24 *2* 23423   * * 2    *
         -    *             *  2*  *4222*3 42563532* *2**
         -             * ** 23* 2 22*22252*3563332 * 3*   *     *
         -    *    *3  6 2*2* 5336**32 25434*54*5222 6*
         -     *   2 2***23 *2*26*5333*3*24 3  *323    *2
     -5.0+    *2*  4*222 *2 *3*2** 322**4 3*22*5*22* ** 2* **
         -     **2 *54 62334  4 *42 * 2  ** 32  2  *
         -       2   ** 2* 2   2   2 * 4* **    3*
         -         *    **       **  **   **
         -       **    *    *
     -7.5+          * *
         -                 2
         -
           ------+---------+---------+---------+---------+---------+post_x  
              -3.6      -2.4      -1.2       0.0       1.2       2.4

MTB > dotplot 'post_x' 'post_y'

                                              .
                                              :
                                           .  :
                                          .:. :
                                     :   .:::::
                     .               :: .::::::
                     :            .  :: :::::::.
                     :        ::  ::.::.::::::::
                     : .  . ::::.:::::::::::::::   :
                 .:. : :::: ::::::::::::::::::::.  :
                 ::: : ::::::::::::::::::::::::::  :
               . :::.::::::::::::::::::::::::::::: :. .
            .: : ::::::::::::::::::::::::::::::::: ::.:.
            ::::.::::::::::::::::::::::::::::::::: :::::... . .
          -----+---------+---------+---------+---------+---------+-post_x  
            -3.6      -2.4      -1.2       0.0       1.2       2.4
Each dot represents 2 points
                                     . .
                            .        : : .  ..
                            :. . .  .: :::. ::
                            :: ::: :::.:::: ::  .
                            ::.:::::::::::: ::  :
                        .  .::::::::::::::::::  :.
                    ..  :: :::::::::::::::::::..:::  :  .
             .  .   ::: ::.::::::::::::::::::::::::: :..:   :
          -----+---------+---------+---------+---------+---------+-post_y  
            -7.5      -6.0      -4.5      -3.0      -1.5       0.0

MTB > describe 'post_x' 'post_y'

Variable        N     Mean   Median   TrMean    StDev   SEMean
post_x        500  -1.1225  -0.9346  -1.1091   1.2503   0.0559
post_y        500  -4.1554  -4.1410  -4.1598   1.2163   0.0544

Variable      Min      Max       Q1       Q3
post_x    -3.9523   2.0727  -2.0531  -0.1369
post_y    -7.7544  -0.7904  -5.0453  -3.3539






