macro

like model data val;
num k.

mcolumn model data val logval pos c1 c2 c3 c4 c5 c6 c7 c8 c9 c10
mconstant k k1 k2 k3 k4 k5 k6 k7 k8 k9 k10

if k=1
  ##############################################################
  # BINOMIAL                                                   #
  # MODEL - PROPORTION P				       #
  # DATA IS S (NUMBER OF SUCCESSES) AND F (NUMBER OF FAILURES) #
  ##############################################################
  let logval=data(1)*log(model)+data(2)*log(1-model)

elseif k=2
  ##############################################################
  # NORMAL                                                     #
  # MODEL - MEAN M					       #
  # DATA IS XBAR (SAMPLE MEAN), N (SAMPLE SIZE)                #
  #         S (POPULATION STANDARD DEVIATION)                  #
  ##############################################################
  let logval=-.5*data(2)/data(3)**2*(model-data(1))**2

elseif k=3
  ##############################################################
  # POISSON                                                    #
  # MODEL - MEAN L					       #
  # DATA IS X (SAMPLE SUM), T (TIME INTERVAL)                  #
  ##############################################################
  let logval=-model*data(2)+data(1)*log(model)

elseif k=4
  ##############################################################
  # HYPERGEOMETRIC                                             #
  # MODEL - NUMBER OF SUCCESSES IN POPULATION K		       #
  # DATA IS N (POPULATION SIZE), n (SAMPLE SIZE) AND           #
  #         x (NUMBER OF SUCCESSES IN SAMPLE)                  #
  ##############################################################
  
  let k1=min(model)
  let k2=max(model)
  let k3=data(1)-data(2)+data(3)
  let k4=data(3)
  copy k1 k4 c1
  copy k2 k3 c2
  let k5=max(c1)
  let k6=min(c2)

  copy model c3;
   use model k5:k6.
  if k1<k4
    let k7=k4-1
    copy model c4;
      use model k1:k7.
    let c4=-999+0*c4
  endif
  if k3<k2
    let k7=k3+1
    copy model c5;
      use model k7:k2 .
    let c5=-999+0*c5
  endif
 
  let logval=(c3+.5)*log(c3+(c3=0))-(c3-data(3)+.5)*log(c3-data(3)+(c3=data(3)))
  let logval=logval+(data(1)-c3+.5)*log(data(1)-c3+(data(1)=c3))
  let logval=logval-(data(1)-c3-data(2)+data(3)+.5) * &
       log(data(1)-c3-data(2)+data(3)+(data(1)-c3=data(2)-data(3))) 

  if k1<k4
     stack c4 logval logval
  endif
  if k3<k2
    stack logval c5 logval
 endif

elseif k=5
  ##############################################################
  # DISCRETE UNIFORM                                           #
  # MODEL - UPPER BOUND N                		       #
  # DATA IS MAX (MAXIMUM OBSERVATION), N (SAMPLE SIZE)         #
  ##############################################################
  
  let k1=min(model)
  let k2=data(1)
  copy k1 k2 c1
  let k3=max(c1)
  let logval=-data(2)*log(model)*(model>=k3)-999*(model<k3)  

elseif k=6
  ##############################################################
  # CAPTURE/RECAPTURE                                          #
  # MODEL - SIZE OF FINITE POPULATION                          #
  # DATA IS NUMBER OF MARKED ITEMS IN POPULATION,              #
  #       SAMPLE SIZE, AND NUMBER OF MARKED ITEMS IN SAMPLE    #
  ##############################################################

  let k3=min(model)
  let k1=data(2)-data(3)
  if k3<k1
     let k4=k1-1
     copy model c1;
       omit model k3:k4.
     copy model c2;
       use model k3:k4.
     let c2=-999*0*c2
  else
    let c1=model
  endif

  let k2=data(1)-data(2)
  let logval=(c1+.5)*log(c1)+(c1+k2+.5)*log(c1+k2)
  let logval=logval-(c1-k1+.5)*log(c1-k1)
  let logval=logval-(c1+data(1)+.5)*log(c1+data(1))

  if k3<k1
    stack c2 logval logval
  endif

elseif  k=7
  ##############################################################
  # EXPONENTIAL                                                #
  # MODEL - MEAN M                                             #
  # DATA IS SAMPLE SUM AND SAMPLE SIZE                         #
  ##############################################################
  let logval=-data(2)*log(model)-data(1)/model
endif

let val=exp(logval-max(logval))*10**6

endmacro
